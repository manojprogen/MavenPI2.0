package com.progen.execution;

import com.progen.userlayer.db.LogReadWriter;
import java.io.IOException;
import org.apache.log4j.*;

public class SelectQuery {

    public static Logger logger = Logger.getLogger(SelectQuery.class);
    //public LimitMysqlRow = " Limit " ;
    LogReadWriter logrw = new LogReadWriter();
    public boolean limitMysqlRow = false;

    public String selecttabname(String tabname, String st_date, String lt_date, String cmpId) {

        try {
            logrw.fileWriter("st_date-->" + st_date + "  lt_date-->" + lt_date);
        } catch (IOException ex) {
            logger.error("Exception:", ex);
        }
        String sql = null;
        String incr = " 1=1 ";


        //ArrayList al=new ArrayList();

//        if(tabname.equalsIgnoreCase("dim_prg_reservation_id"))
//        {
//          sql="select distinct component_id , component_id as reservation_id from prg_booking_comp_fact";
//        }

//        if (tabname.equalsIgnoreCase("data_log")) {
//            sql = " select "
//                    + "ID,"
//                    + "TABLE_NAME,"
//                    + "DATE_TIME,"
//                    + cmpId + " AS company_id, "
//                    + "NULL custom_field1, "
//                    + "NULL custom_field2, "
//                    + "NULL custom_field3, "
//                    + "NULL custom_number1, "
//                    + "NULL custom_number2, "
//                    + "NULL custom_number3 "
//                    + " from DATA_LOG ";
////                  + "where DATE_TIME between STR_TO_DATE('"+st_date+"', '%Y-%m-%d %T') and STR_TO_DATE('"+lt_date+"', '%Y-%m-%d %T')";
//        }
        if (tabname.equalsIgnoreCase("data_log_stg")) {
            sql = " select "
                    + "ID,"
                    + "TABLE_NAME,"
                    + "DATE_TIME,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " from DATA_LOG "
                    + " where DATE_TIME between STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')";
        }

        if (tabname.equalsIgnoreCase("geographic_dimension_stg")) {
            sql = "  select "
                    + "g.id AS geographic_id,"
                    + "c.longitude AS longitude,"
                    + "c.latitude AS latitude,"
                    + "g.sub_entity_id AS sub_entity_id,"
                    + "g.post_code AS post_code,"
                    + "g.category_id AS category_id,"
                    + "g.name AS custom_location1,"
                    + "c.name custom_location2,"
                    + "c.iso_3166_code custom_location3,"
                    + "s.name custom_location4,"
                    + "cs.name custom_location5,"
                    + "'post_codes ' AS source_table,"
                    + "'QuickTravel' AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + "  from post_codes AS g ,"
                    + "countries c,"
                    + "sub_entities s,"
                    + "categories cs"
                    + "  where g.sub_entity_id = s.id"
                    + "  and s.country_id = c.id"
                    + "  and g.category_id = cs.id ";
        }
        if (tabname.equalsIgnoreCase("prg_package_structure_stg")) {
            sql = " select"
                    + " pk.id package_id,"
                    + " pk.position,"
                    + " pk.resource_id,"
                    + " pk.created_at,"
                    + " pk.updated_at,"
                    + " pk.price_individually,"
                    + " pk.options,"
                    + " pk.resource_group_id,"
                    + " pk.fare_basis_set_id,"
                    + " pk.default_selection   ,"
                    + " rg.title,"
                    + " rg.prompt,"
                    + " rg.product_type_id,"
                    + "'QuickTravel' AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    //                    + " from package_items pk left join resource_groups rg  on (pk.resource_group_id = rg.id )"
                    + " from package_items pk left join resource_groups_view rg  on (pk.resource_group_id = rg.id )"
                    + " where pk.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')";
        }
        if (tabname.equalsIgnoreCase("prg_passenger_types_dim_stg")) {
            sql = "select "
                    + "id,"
                    + "name,"
                    + "minimum_age,"
                    + "maximum_age,"
                    + "age_range_required,"
                    + "position,"
                    + "default_age,"
                    + "created_at,"
                    + "updated_at,"
                    + "'QuickTravel' AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " from passenger_types "
                    + " where updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')";
        }

        if (tabname.equalsIgnoreCase("resource_groups")) {
            sql = "select "
                    + "id"
                    + ",package_id"
                    + ",position"
                    + ",pick"
                    + ",minimum_required"
                    + ",maximum_restriction"
                    + ",minimum"
                    + ",maximum"
                    + ",predefined_offset"
                    + ",offset_by_days"
                    + ",use_running_date"
                    + ",affects_running_date"
                    + ",predefined_end_date"
                    + ",duration"
                    + ",prompt_duration"
                    + ",title"
                    + ",prompt"
                    + ",product_type_id"
                    + ",prompt_for_quantity"
                    + ",default_quantity"
                    + ",_autopick_package_item_id"
                    + ",auto_pick_default_selections"
                    + ",created_at"
                    + ",updated_at"
                    + ",'QuickTravel' AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    //                    + " from resource_groups where updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')";
                    + " from resource_groups_view where updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')";
        }
        if (tabname.equalsIgnoreCase("reservation_groups")) {
            sql = "select "
                    + "id,"
                    + "reservation_id,"
                    + "resource_group_id,"
                    + "first_travel_date,"
                    + "position,"
                    + "prompted,"
                    + "running_date,"
                    + "created_at,"
                    + "updated_at,"
                    + "'QuickTravel' AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    //                    + " from reservation_groups where updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')";
                    + " from reservation_groups_view where updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')";
        }
        if (tabname.equalsIgnoreCase("resources")) {
            sql = "select "
                    + "id,"
                    + "name,"
                    + "product_type_id,"
                    + "default_capacity,"
                    + "type,"
                    + "inventory_type,"
                    + "maximum_occupancy,"
                    + "location_id,"
                    + "property_id,"
                    + "fare_basis_pointer_id,"
                    + "disclaimer_id,"
                    + "deposit_rule_id,"
                    + "vendor_id,"
                    + "maximum_weight,"
                    + "days_before_inventory_expires,"
                    + "property_type_id,"
                    + "star_rating,"
                    + "booking_notes,"
                    + "expiry_units,"
                    + "uses,"
                    + "inline_price_in_cents,"
                    + "inline_cost_in_cents,"
                    + "expiry_level,"
                    + "unlimited_uses,"
                    + "no_expiry,"
                    + "reason_required,"
                    + "null overriding_reservation_ticket_format_id,"
                    + "resource_category_id,"
                    + "created_at,"
                    + "updated_at,"
                    + "_bookable_online,"
                    + "code,"
                    + "restrict_to_client_types,"
                    + "minimum_age,"
                    + "guardian_minimum_age,"
                    + "book_before_level,"
                    + "book_before_units,"
                    + "maximum_passengers_online,"
                    + "active,"
                    + "report_changes,"
                    + "inline_pricing,"
                    + "bookable_individually,"
                    + "minimum_passengers,"
                    + "maximum_passengers,"
                    + "required_number_of_vehicles,"
                    + "frequent_traveller_points_multiplier,"
                    + "non_commissionable,"
                    + "null overriding_passenger_ticket_format_id,"
                    + "null overriding_vehicle_ticket_format_id,"
                    + "masterpoint_resource_id,"
                    + "restrict_to_web_sites,"
                    + "print_tickets,"
                    + "individual_tickets,"
                    + "vehicle_ticket_format_id,"
                    + "passenger_ticket_format_id,"
                    + "reservation_ticket_format_id,"
                    + "frequent_traveller_redemption_rate,"
                    + "'QuickTravel' AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " from resources_view where updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') ";
        }

        if (tabname.equalsIgnoreCase("product_dimension_stg")) {
            sql = "SELECT r.name AS name, "
                    + " c.name AS category, "
                    + " pt.name AS product_type, "
                    + " p.name AS property, "
                    + " r.star_rating AS star_rating, "
                    + " prop_type.name AS property_type,r.created_at AS created_at, "
                    + " r.updated_at AS updated_at, "
                    + " date(r.created_at) AS created_date, "
                    + " hour(r.created_at)*3600 + minute(r.created_at)*60 + second(r.created_at) AS created_time_insec,"
                    + " date(r.updated_at) AS updated_date, "
                    + " hour(r.updated_at)*3600 + minute(r.updated_at)*60 + second(r.updated_at) AS updated_time_insec, "
                    + " r.id AS product_id, "
                    + " 'resources' AS source_table, "
                    + " 'QuickTravel' AS source_db, "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM resources_view AS r LEFT JOIN resource_categories AS c ON r.resource_category_id = c.id "
                    //                    + " LEFT JOIN product_types AS pt ON r.product_type_id = pt.id LEFT JOIN properties AS p ON r.property_id = p.id LEFT JOIN property_types "
                    + " LEFT JOIN product_types AS pt ON r.product_type_id = pt.id LEFT JOIN properties_view AS p ON r.property_id = p.id LEFT JOIN property_types "
                    + " AS prop_type ON r.property_type_id = prop_type.id where r.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') ";
            limitMysqlRow = false;

        }
        if (tabname.equalsIgnoreCase("prg_vehicle_components_stg")) {
            sql = " SELECT vehicle_types.name  AS vehicle_type,"
                    + "consumers.length AS vehicle_length,"
                    + "consumers.details AS vehicle_details,"
                    + "consumers.cargo AS vehicle_cargo_notes,"
                    + "vehicle_types.has_cargo AS has_cargo,"
                    + "consumer_splits.consumer_splittable_id AS reservation_id,"
                    + "consumer_splits.id AS source_id,"
                    + "'consumer_splits' AS source_table ,"
                    + "'QuickTravel' AS source_db,"
                    + "res.resource_id AS product_component_dimension_id,"
                    + "bookings.state AS state,"
                    + "bookings.first_travel_date AS first_travel_date,"
                    + "bookings.created_at AS created_at,"
                    + "bookings.updated_at AS updated_at,"
                    + "DATE(bookings.first_travel_date) AS first_travel_date_indate,"
                    + "hour(bookings.first_travel_date)*3600+  minute(bookings.first_travel_date)*60+second( bookings.first_travel_date) AS first_travel_time_insec,"
                    + "DATE(bookings.created_at) AS created_date,"
                    + "hour(bookings.created_at)*3600+  minute(bookings.created_at)*60 + second(bookings.created_at) AS created_time_insec,"
                    + "DATE( bookings.updated_at) AS updated_date,"
                    + "hour(bookings.updated_at)*3600 + minute(bookings.updated_at)*60 + second(bookings.updated_at) AS updated_time_insec,"
                    + "bookings.gross_in_cents AS gross,"
                    + "web_sites.host AS web_site_url,referral_codes.code AS referral_code,"
                    + "countries.name AS country,"
                    + "bookings.post_code AS geographic_dimension_id,"
                    + "bookings.client_id  AS client_dimension_id,"
                    + "bookings.creator_id AS user_dimension_id,"
                    + "bookings.company_creator_id AS department_dimension_id,"
                    + "bookings.reference AS booking_reference,"
                    + "bookings.first_travel_date AS booking_first_travel_date,"
                    + "bookings.web_site_id,"
                    + "rce.vendor_id AS vendor_dimension_id,"
                    + "res.active AS reservation_active,"
                    + "res.pick_up_information  AS pick_up_information,"
                    + "res.drop_off_information AS drop_off_information,"
                    + "res.id AS Component_id,"
                    + "res.comment AS COMMENT,"
                    + "0 AS package_id,"
                    + "bookings.id AS bookings_id,"
                    + "consumers.id AS consumers_id,"
                    + "consumer_splits.id AS consumer_splits_id ,"
                    + "vehicle_types.id AS value5,"
                    + " consumer_splits.gross_in_cents AS value2, "
                    + " (SELECT SUM(ads.gross_in_cents) "
                    + "FROM consumer_splits ads "
                    + "WHERE ads.consumer_splittable_type = 'Adjustment' "
                    + "AND ads.consumer_splittable_id = a.id "
                    + "AND ads.consumer_id = consumer_splits.consumer_id) AS value3, "
                    + "bookings.created_at AS created_at_gmt,"
                    + "bookings.updated_at AS updated_at_gmt, "
                    + "payments.till_id AS till_id,  "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + "FROM consumer_splits AS consumer_splits "
                    + "LEFT JOIN consumers AS consumers "
                    + "ON consumers.id = consumer_splits.consumer_id "
                    + "LEFT JOIN adjustments_view AS a "
                    + "ON a.adjustable_item_type = 'Reservation' "
                    + "AND a.adjustable_item_id = consumer_splits.consumer_splittable_id "
                    + "LEFT JOIN consumer_splits AS ads "
                    + "ON ads.consumer_splittable_type = 'Adjustment' "
                    + "AND ads.consumer_splittable_id = a.id "
                    + "AND ads.consumer_id = consumer_splits.consumer_id "
                    + "LEFT JOIN vehicle_types AS vehicle_types "
                    + "ON consumers.vehicle_type_id = vehicle_types.id "
                    //                    + "LEFT JOIN bookings AS bookings "
                    + "LEFT JOIN bookings_view AS bookings "
                    + "ON bookings.id = consumers.booking_id "
                    + "LEFT JOIN referral_codes AS referral_codes "
                    + "ON bookings.referral_code_id = referral_codes.id "
                    + "LEFT JOIN web_sites AS web_sites "
                    + "ON web_sites.id = bookings.web_site_id "
                    + "LEFT JOIN countries AS countries "
                    + "ON bookings.country_id = countries.id "
                    //                    + "LEFT JOIN reservations res "
                    + "LEFT JOIN reservations_view res "
                    + "ON consumer_splits.consumer_splittable_id = res.id "
                    + "LEFT JOIN resources_view AS rce "
                    + "ON rce.id = res.resource_id "
                    + " LEFT JOIN payments AS payments "
                    + " ON payments.booking_id = bookings.id "
                    //                    + "LEFT JOIN prg_booking_PACK_REF ref1 "
                    //                    + "ON res.reservation_group_id = ref1.resource_group_id "
                    + "WHERE consumer_splits.consumer_splittable_type = 'Reservation' "
                    + "AND consumers.type = 'Vehicle' "
                    //                    + " and bookings.created_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')"
                    + " AND ((consumer_splits.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')) ||(consumers.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')))"
                    + " GROUP BY consumer_splits.id order by consumer_splits.id , consumers.id ,bookings.id";
            limitMysqlRow = true;

        }
        if (tabname.equalsIgnoreCase("client_dimension_stg")) {
            sql = "SELECT p.first_name AS first_name, "
                    + "  p.last_name AS last_name, "
                    + " IF(p.type = 'Person', "
                    + " concat(p.last_name, ', ', p.first_name), p.name) AS name, "
                    + " client_types.name  AS client_type, "
                    + " (CASE clients.payment_method WHEN 0  THEN 'PAY DIRECT' WHEN 1 THEN 'TICKET HOLDER' WHEN 2 THEN 'ON ACCOUNT' WHEN 3 THEN 'ON ACCOUNT TICKET_HOLDER' ELSE 'UNKNOWN'END) AS payment_method, "
                    + " client_types.agent AS agent, "
                    + " addresses.address_line1 AS address_line_1, "
                    + " addresses.address_line2 AS address_line_2, "
                    + " addresses.city  AS city, "
                    + " addresses.state AS state, "
                    + " addresses.post_code  AS post_code, "
                    + " countries.name AS country, "
                    + " contacts.email AS email, "
                    + " contacts.mobile AS mobile, "
                    + " contacts.phone AS phone, "
                    + " contacts.website AS website, "
                    + " commission_levels.name AS commission_level, "
                    + " clients.created_at AS created_at, "
                    + " date( clients.created_at) AS created_date, "
                    + " hour( clients.created_at)*3600 + minute( clients.created_at)*60 + "
                    + " second( clients.created_at) AS created_time_insec, "
                    + " clients.id AS client_id, "
                    + " 'clients' AS source_table, "
                    + " 'QuickTravel' AS source_db, "
                    + " clients.mail_out AS mail_out, "
                    + " p.active AS client_type4,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3, "
                    + "clients.external_identifier AS external_identifier,"
                    + "clients.sales_coverage_target_group_id AS sales_coverage_target_group_id,"
                    + "clients.retail_chain_id AS retail_chain_id,"
                    + "clients.geographic_target_group_id AS geographic_target_group_id,"
                    + "p.created_at AS parties_created_at,"
                    + "p.updated_at AS parties_updated_at,"
                    + "p.updator_id AS parties_updator_id,"
                    + "p.creator_id AS parties_creator_id,"
                    + "p.login AS login_name,"
                    + "p.active AS active,"
                    + "p.notes AS notes,"
                    + "p.primary_contact_name AS primary_contact_name,"
                    + "p.currency_iso_code AS currency_iso_code "
                    //                    + " FROM clients AS clients "
                    + " FROM clients_view AS clients "
                    + " LEFT JOIN client_types    AS client_types "
                    + " ON clients.client_type_id = client_types.id "
                    + " LEFT JOIN parties_view AS p ON clients.party_id = p.id "
                    + " LEFT JOIN addresses AS addresses "
                    + " ON addresses.party_id = p.id LEFT JOIN countries AS countries ON addresses.country_id = countries.id "
                    //                    + " LEFT JOIN contacts AS contacts ON contacts.party_id = p.id "
                    + " LEFT JOIN contacts_view AS contacts ON contacts.party_id = p.id "
                    + " LEFT JOIN commission_levels AS commission_levels "
                    + " ON commission_levels.id = clients.commission_level_id where "
                    + " clients.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') "
                    + " or addresses.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') "
                    + " or p.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') "
                    + " or client_types.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') "
                    + " or contacts.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') "
                    + " or commission_levels.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') ";

            limitMysqlRow = false;

        }

        if (tabname.equalsIgnoreCase("package_dimension_stg")) {


            sql = "SELECT r.name AS name,"
                    + " c.name AS category,"
                    + " pt.name AS product_type,"
                    + " p.name AS property,"
                    + " r.star_rating AS star_rating,"
                    + " prop_type.name  AS property_type,"
                    + " r.created_at AS created_at,"
                    + " r.updated_at AS updated_at,"
                    + " date(r.created_at) AS created_date,"
                    + " hour(r.created_at)*3600 + minute(r.created_at)*60 + "
                    + " second(r.created_at) AS created_time_insec,"
                    + " date(r.updated_at) AS updated_date,"
                    + " hour(r.updated_at)*3600 + minute(r.updated_at)*60 + "
                    + " second(r.updated_at) AS updated_time_insec,"
                    + " r.id AS package_id,"
                    + " 'resources' AS source_table,"
                    + " 'QuickTravel'  AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM resources_view AS r "
                    + " LEFT JOIN resource_categories AS c ON r.resource_category_id = c.id"
                    + " LEFT JOIN product_types AS pt ON r.product_type_id = pt.id "
                    //                    + " LEFT JOIN properties AS p ON r.property_id = p.id "
                    + " LEFT JOIN properties_view AS p ON r.property_id = p.id "
                    + " LEFT JOIN property_types AS prop_type "
                    + " ON r.property_type_id = prop_type.id where r.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')";

            limitMysqlRow = false;

        }
        if (tabname.equalsIgnoreCase("department_dimension_stg")) {

            sql = " SELECT parties.name  AS name,"
                    + " parties.created_at AS created_at,"
                    + " parties.updated_at AS updated_at,"
                    + " date(parties.created_at) AS created_date,"
                    + " hour(parties.created_at)*3600 + minute(parties.created_at)*60 + "
                    + " second(parties.created_at) AS created_time_insec,"
                    + " date(parties.updated_at) AS updated_date,"
                    + "hour(parties.updated_at)*3600 + minute(parties.updated_at)*60 + "
                    + "second(parties.updated_at) AS updated_time_insec, "
                    + " parties.id  AS department_id,"
                    + " 'parties' AS source_table,"
                    + "'QuickTravel' AS source_db, "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM parties_view AS parties "
                    + " WHERE parties.type= 'Organisation' AND parties.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') "
                    + " AND parties.internal_subdivision = true GROUP BY parties.id";

            limitMysqlRow = false;

        }
        if (tabname.equalsIgnoreCase("prg_user_dimension_stg")) {

            sql = "SELECT parties.id AS user_id,"
                    + "parties.first_name AS first_name,"
                    + "parties.last_name AS last_name,"
                    + "parties.login AS login_name,"
                    + "parties.created_at AS created_at,"
                    + "parties.updated_at AS updated_at,"
                    + "date(parties.created_at) AS created_date,"
                    + "hour(parties.created_at)*3600 + minute(parties.created_at)*60 + "
                    + "second(parties.created_at) AS created_time_insec,"
                    + " date(parties.updated_at) AS updated_date, "
                    + "hour(parties.updated_at)*3600 + minute(parties.updated_at)*60 + "
                    + " second(parties.updated_at) AS updated_time_insec,"
                    + "parties.id  AS source_id, "
                    + "'parties' AS source_table, "
                    + "'QuickTravel' AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM parties_view AS parties "
                    + " where parties.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')";

            limitMysqlRow = false;
        }

        if (tabname.equalsIgnoreCase("prg_booking_fact_stg")) {

            sql = "select booking_reference,"
                    + " state,"
                    + " first_travel_date,"
                    + "created_at,"
                    + " updated_at,"
                    + " date(first_travel_date) AS first_travel_date_indate,"
                    + " hour(first_travel_date)*3600 + minute(first_travel_date)*60 + "
                    + "second(first_travel_date) AS first_travel_date_time_insec,  "
                    + "date(created_at) AS created_date,"
                    + " hour(created_at)*3600 + minute(created_at)*60 + "
                    + "second(created_at) AS created_time_insec,"
                    + "date(updated_at) AS updated_date,"
                    + " hour(updated_at)*3600 + minute(updated_at)*60 + "
                    + "second(updated_at) AS updated_time_insec,"
                    + "gross, "
                    + "commission, "
                    + "nett,"
                    + "amount_owing, "
                    + "amount_paid, "
                    + "num_passengers, "
                    + "case when status = 'cancelled' then d_gross_in_cents else gross end  Actual_gross, "
                    + "case when status = 'cancelled' then d_commission_in_cents else commission end Actual_commission, "
                    + "case when status = 'cancelled' then gross - d_commission_in_cents else nett end Actual_nett , "
                    + "case when status = 'cancelled' then d_gross_in_cents else null end cancelled_gross, "
                    + "case when status = 'cancelled' then d_commission_in_cents else null end  cancelled_commission, "
                    + "case when status = 'cancelled' then gross - d_commission_in_cents else null end  cancelled_nett , "
                    + "referral_code, "
                    + "country,"
                    + "geographic_dimension_id, "
                    + "client_dimension_id, "
                    + "user_dimension_id, "
                    + "department_dimension_id, "
                    + "passenger_first_name, "
                    + "passenger_last_name, "
                    + "customer_contact_name, "
                    + "customer_contact_phone, "
                    + "customer_contact_mobile, "
                    + "first_payment_created_at, "
                    + "web_site_url, "
                    + "public_comments, "
                    + "private_comments, "
                    + "booking_id, "
                    + "source_table, "
                    + "source_db, "
                    + "d_gross_in_cents, "
                    + "d_commission_in_cents, "
                    + "d_total_adjustments_in_cents, "
                    + "d_cost_in_cents , "
                    + "d_vendor_paid_in_cents , "
                    + "total_comp  , "
                    + "total_trips, "
                    + "d_pre_adjusted_gross_in_cents, "
                    + "d_pre_adjusted_commission_in_cents, "
                    + "d_total_adjusted_commission_in_cents, "
                    + "created_at_gmt,"
                    + "updated_at_gmt, "
                    + "adjustments_category, "
                    + "till_id, "
                    + "value1, "
                    + "web_site_id,"
                    + "creator_id,"
                    + "updator_id, "
                    + "company_id,"
                    + "custom_field1,"
                    + "custom_field2,"
                    + "custom_field3,"
                    + "custom_number1,"
                    + "custom_number2,"
                    + "custom_number3, "
                    + "manually_priced, "
                    + "sub_items_gross_in_cents, "
                    + "manually_assigned_fare_basis_set, "
                    + "original_booking_id, "
                    + "external_identifier, "
                    + "insurance_offered, "
                    + "bookings_version, "
                    + "_accounts_payable_reservations_removed, "
                    + "locked, "
                    + "referral_code_id, "
                    + "country_id, "
                    + "deposit_due_on, "
                    + "balance_due_on, "
                    + "deposit_in_cents, "
                    + "pre_adjusted_gross_in_cents, "
                    + "pre_adjusted_commission_in_cents, "
                    + "total_adjusted_commission_in_cents, "
                    + "other_charges_in_cents, "
                    + "indexed "
                    + "from "
                    + " (SELECT b.reference AS booking_reference, "
                    + "b.state AS state, "
                    + "b.first_travel_date AS first_travel_date, "
                    + "b.created_at AS created_at, "
                    + "b.updated_at AS updated_at, "
                    + "date(b.first_travel_date) AS first_travel_date_indate, "
                    + "hour(b.first_travel_date)*3600 + minute(b.first_travel_date)*60 + "
                    + "second(b.first_travel_date) AS first_travel_date_time_insec,  "
                    + "date(b.created_at) AS created_date, "
                    + "hour(b.created_at)*3600 + minute(b.created_at)*60 + "
                    + " second(b.created_at) AS created_time_insec, "
                    + "date(b.updated_at) AS updated_date, "
                    + "hour(b.updated_at)*3600 + minute(b.updated_at)*60 + "
                    + " second(b.updated_at) AS updated_time_insec, "
                    + " b.gross_in_cents AS gross, "
                    + " b.commission_in_cents  AS commission, "
                    + " (b.gross_in_cents - b.commission_in_cents) AS nett, "
                    + " b.balance_in_cents AS amount_owing, (SELECT SUM(p.amount_in_cents) "
                    + " FROM payments p "
                    + " WHERE p.booking_id = b.id "
                    + " AND p.success = 1  ) AS amount_paid, "
                    + " COUNT(DISTINCT(pax.id)) AS num_passengers, "
                    + " referral_codes.code AS referral_code, "
                    + " countries.name AS country, "
                    + " b.post_code AS geographic_dimension_id, "
                    + " b.client_id AS client_dimension_id, "
                    + " b.creator_id AS user_dimension_id, "
                    + " b.company_creator_id AS department_dimension_id, "
                    + " pax.first_name  AS passenger_first_name, "
                    + " pax.last_name AS passenger_last_name, "
                    + " b.customer_contact_name AS customer_contact_name, "
                    + " b.customer_contact_phone AS customer_contact_phone, "
                    + " b.customer_contact_mobile AS customer_contact_mobile, "
                    + " MIN(payments.created_at) AS first_payment_created_at, "
                    + " web_sites.host AS web_site_url, "
                    + " b.public_comments AS public_comments, "
                    + " b.internal_comments AS private_comments, "
                    + " b.id AS booking_id, "
                    + "  b.state as status , "
                    + " 'bookings' AS source_table, "
                    + " 'QuickTravel' AS source_db, "
                    + " sum(res.gross_in_cents) d_gross_in_cents, "
                    + " sum(res.commission_in_cents) d_commission_in_cents, "
                    + " sum(res.total_adjustments_in_cents) d_total_adjustments_in_cents, "
                    + " sum(res.cost_in_cents) d_cost_in_cents , "
                    + " sum(res._vendor_paid_in_cents) d_vendor_paid_in_cents , "
                    + " count(DISTINCT( res.resource_id)) total_comp  , "
                    + " count(DISTINCT(res.trip_id)) total_trips, "
                    + " sum(res.pre_adjusted_gross_in_cents) d_pre_adjusted_gross_in_cents, "
                    + " sum(res.pre_adjusted_commission_in_cents) d_pre_adjusted_commission_in_cents, "
                    + " sum(res.total_adjusted_commission_in_cents) d_total_adjusted_commission_in_cents,"
                    + " b.created_at AS created_at_gmt,"
                    + " b.updated_at AS updated_at_gmt, "
                    + " NULL adjustments_category, "
                    + " NULL AS till_id,"
                    + " b.total_adjustments_in_cents value1, "
                    + " b.web_site_id  web_site_id ,"
                    + " b.creator_id  creator_id ,"
                    + " b.updator_id  updator_id ,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "b.email custom_number3, "
                    + "max(res.manually_priced) manually_priced,"
                    + "sum(res.sub_items_gross_in_cents) sub_items_gross_in_cents,"
                    + "max(res.manually_assigned_fare_basis_set) manually_assigned_fare_basis_set, "
                    + "b.original_booking_id original_booking_id,"
                    + "b.external_identifier external_identifier,"
                    + "b.insurance_offered insurance_offered,"
                    + "b.bookings_version bookings_version,"
                    + "b._accounts_payable_reservations_removed _accounts_payable_reservations_removed,"
                    + "b.locked locked,"
                    + "b.referral_code_id referral_code_id, "
                    + "b.country_id country_id, "
                    + "b.deposit_due_on deposit_due_on, "
                    + "b.balance_due_on balance_due_on, "
                    + "b.deposit_in_cents deposit_in_cents, "
                    + "b.pre_adjusted_gross_in_cents pre_adjusted_gross_in_cents, "
                    + "b.pre_adjusted_commission_in_cents pre_adjusted_commission_in_cents, "
                    + "b.total_adjusted_commission_in_cents total_adjusted_commission_in_cents, "
                    + "b.other_charges_in_cents other_charges_in_cents, "
                    + "NULL indexed "
                    //                    + " FROM bookings as b "
                    + " FROM bookings_view as b "
                    //            + " inner join reservations res on b.id = res.booking_id "
                    //                    + " LEFT JOIN reservations AS res "
                    + " LEFT JOIN reservations_view AS res "
                    + " on b.id = res.booking_id "
                    + " LEFT JOIN consumers AS pax "
                    + " ON pax.booking_id = b.id "
                    + " AND pax.type = 'Passenger' "
                    + " LEFT JOIN countries AS countries"
                    + " ON b.country_id = countries.id"
                    + " LEFT JOIN payments AS payments"
                    + " ON payments.booking_id = b.id"
                    + " AND success = 1"
                    + " LEFT JOIN referral_codes AS referral_codes "
                    + " ON b.referral_code_id = referral_codes.id "
                    + " LEFT JOIN web_sites AS web_sites "
                    + " ON web_sites.id = b.web_site_id where b.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')"
                    + "  GROUP BY b.id ) A "
                    + " order by booking_id ";

            limitMysqlRow = true;
        }

        if (tabname.equalsIgnoreCase("prg_booking_comp_fact_stg")) {
            sql = "SELECT(r.gross_in_cents - r.commission_in_cents) AS nett,"
                    + "r.gross_in_cents AS gross,"
                    + "r.commission_in_cents AS commission,"
                    + "r.cost_in_cents  AS cost,"
                    + "r.total_adjustments_in_cents AS included_gross_adjustment,"
                    + "r.total_adjusted_commission_in_cents AS included_commission_adjustment,"
                    + "COUNT(DISTINCT(rpax.id)) AS num_passengers,"
                    + "COUNT(DISTINCT(rveh.id))  AS num_vehicles,"
                    + "(SELECT SUM(rveh.length)"
                    + " FROM consumers rveh"
                    + " WHERE rveh.id = rcs.consumer_id"
                    + " AND rveh.type = 'Vehicle'"
                    + " ) AS length_vehicles,"
                    + "DATEDIFF(r.last_travel_date, r.first_travel_date) + 1  AS duration,"
                    + "r.first_travel_date AS first_travel_date,"
                    + "b.first_travel_date AS booking_first_travel_date,"
                    + "b.created_at AS booking_created_at,"
                    + " MIN(ts.time) AS service_departure_time,"
                    + " from_ts.time AS pickup_time,"
                    + "date(r.first_travel_date) AS first_travel_date_indate,"
                    + "hour(r.first_travel_date)*3600 + minute(r.first_travel_date)*60 + "
                    + "second(r.first_travel_date) AS first_travel_date_time_insec,"
                    + "date(b.first_travel_date) AS booking_first_travel_date_indate,"
                    + " hour(b.first_travel_date)*3600 + minute(b.first_travel_date)*60 + "
                    + "second(b.first_travel_date) AS booking_first_travel_date_time_insec,"
                    + " date(b.created_at) AS booking_created_date,"
                    + " hour(b.created_at)*3600 + minute(b.created_at)*60 + second(b.created_at) "
                    + "AS booking_created_time_insec,"
                    + "from_rs.name  AS from_stop,"
                    + "to_rs.name  AS to_stop,"
                    + "r.pick_up_information  AS pick_up_information,"
                    + "r.drop_off_information AS drop_off_information,"
                    + "r.comment  AS COMMENT,"
                    + "b.post_code AS geographic_dimension_id,"
                    + "b.client_id AS client_dimension_id,"
                    + "rce.vendor_id AS vendor_dimension_id,"
                    + "b.creator_id AS user_dimension_id,"
                    + "b.company_creator_id AS department_dimension_id,"
                    + "b.reference AS booking_reference,"
                    + "bc.name  AS bed_configuration,"
                    + "r.resource_id AS product_component_dimension_id,"
                    + "b.customer_contact_name AS customer_contact_name,"
                    + "b.customer_contact_phone AS customer_contact_phone,"
                    + "b.customer_contact_mobile AS customer_contact_mobile,"
                    + "r.created_at AS created_at,"
                    + "r.updated_at AS updated_at,"
                    + "date( r.created_at) AS created_date,"
                    + "hour( r.created_at)*3600 + minute( r.created_at)*60 + "
                    + "second( r.created_at) AS created_time_insec,"
                    + "date( r.updated_at) AS updated_date,"
                    + "hour( r.updated_at)*3600 + minute( r.updated_at)*60 + "
                    + "second( r.updated_at) AS updated_time_insec,"
                    + "b.balance_in_cents  AS amount_owed,"
                    + "b.gross_in_cents AS booking_gross,"
                    + "(b.gross_in_cents - b.commission_in_cents) AS booking_nett,"
                    + "b.commission_in_cents AS booking_commission,"
                    + "r.active AS reservation_active,"
                    + "b.state AS booking_state,"
                    + "IF( r.active = 0, 'cancelled', IF( DATE(r.updated_at) = DATE(r.created_at), 'new', 'changed' ) ) AS change_state,"
                    + "tl.name AS tariff_level,"
                    + "fbs.name AS fare_basis_set,"
                    + "r.id  AS Component_id,"
                    + "'reservations' AS source_table,"
                    + "0 package_id ,"
                    + "'NA' AS package_name ,"
                    + "'QuickTravel' AS source_db ,  "
                    + " b.id booking_id , "
                    + "b.web_site_id value5, "
                    + "referral_codes.code value4, "
                    + "r.reservation_group_id value3, "
                    + "countries.name AS country, "
                    + "b.created_at booking_created_at_gmt,"
                    + "r.created_at created_at_gmt,"
                    + "r.updated_at updated_at_gmt, "
                    + " max(CONCAT(rveh.last_name,'  ',rveh.first_name)) AS consumer_name,"
                    + " max(rveh.first_name) AS consumer_first_name,"
                    + " max(rveh.last_name) AS consumer_last_name, "
                    + " NULL adjustments_category, "
                    + " NULL AS till_id,"
                    + " b.creator_id creator_id,"
                    + " b.updator_id updator_id,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3, "
                    + "r.inventory_type inventory_type, "
                    + "r.request_confirmed request_confirmed, "
                    + "r.notes_for_vendor notes_for_vendor, "
                    + "r.vendor_pnr vendor_pnr, "
                    + "r.vendor_staff vendor_staff, "
                    + "r.manually_priced manually_priced, "
                    + "r.sub_items_gross_in_cents sub_items_gross_in_cents, "
                    + "r.note_for_inventory_type_change note_for_inventory_type_change, "
                    + "r.position position, "
                    + "r.manually_assigned_fare_basis_set manually_assigned_fare_basis_set, "
                    + "r.cost_currency_iso_code cost_currency_iso_code "
                    //                    + " FROM reservations  AS r"
                    + " FROM reservations_view  AS r"
                    //                    + " LEFT JOIN bookings  AS b"
                    + " LEFT JOIN bookings_view  AS b"
                    + " ON r.booking_id = b.id "
                    + " LEFT JOIN countries AS countries"
                    + " ON b.country_id = countries.id"
                    + " LEFT JOIN referral_codes AS referral_codes "
                    + " ON b.referral_code_id = referral_codes.id "
                    + " LEFT JOIN consumer_splits AS rcs"
                    + " ON rcs.consumer_splittable_id    = r.id"
                    + " AND rcs.consumer_splittable_type = 'Reservation'"
                    + " LEFT JOIN consumers AS rpax "
                    + " ON rpax.id = rcs.consumer_id"
                    + " AND rpax.type = 'Passenger'"
                    + " LEFT JOIN consumers AS rveh"
                    + " ON rveh.id = rcs.consumer_id"
                    + " AND rveh.type = 'Vehicle'"
                    + " LEFT JOIN resources_view AS rce"
                    + " ON rce.id = r.resource_id"
                    + " LEFT JOIN bed_configurations AS bc"
                    + " ON bc.id = r.bed_configuration_id"
                    + " LEFT JOIN trip_stops AS from_ts"
                    + " ON r.from_trip_stop_id = from_ts.id"
                    + " LEFT JOIN route_stops AS from_rs"
                    + " ON from_ts.route_stop_id = from_rs.id"
                    + " LEFT JOIN trip_stops AS to_ts"
                    + " ON r.to_trip_stop_id = to_ts.id"
                    + " LEFT JOIN route_stops AS to_rs"
                    + " ON to_ts.route_stop_id = to_rs.id"
                    + " LEFT JOIN reservations_services AS rs"
                    + " ON rs.reservation_id = r.id"
                    + " LEFT JOIN services AS s"
                    + " ON s.id = rs.service_id"
                    + " LEFT JOIN trip_stops AS ts"
                    + " ON ts.id = s.from_trip_stop_id"
                    + " LEFT JOIN trips AS trip"
                    + " ON ts.trip_id = trip.id"
                    //                    + " LEFT JOIN fare_basis_sets AS fbs"
                    + " LEFT JOIN fare_basis_sets_view AS fbs"
                    + " ON r.fare_basis_set_id = fbs.id"
                    + " LEFT JOIN tariff_levels tl"
                    + " ON fbs.tariff_level_id = tl.id"
                    //                    + " left join prg_booking_PACK_REF ref1"
                    //                    + " on  r.reservation_group_id = ref1.resource_group_id"
                    + " where b.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')"
                    + " GROUP BY r.id order by r.id";

            limitMysqlRow = true;

        }
        if (tabname.equalsIgnoreCase("payments_fact_stg")) {
            sql = "SELECT payments.amount_in_cents AS amount,"
                    + "payments.surcharge_in_cents AS surcharge,"
                    + "payment_types.name AS payment_type_name,"
                    + "0 AS on_account,"
                    + "0 AS credit_card,"
                    + "0 AS ticket_holding,"
                    + "payment_types.comment_required AS comment_required,"
                    + "payment_types.for_frequent_traveller_redemption AS for_frequent_traveller_redemption,"
                    + "payments.created_at AS created_at,"
                    + "date(payments.created_at) AS payment_date,"
                    + "hour(payments.created_at)*3600 + minute( payments.created_at)*60 + second( payments.created_at) AS payment_time_insec,"
                    + "payments.success AS success,"
                    + "null MESSAGE,"
                    + "payments.comment AS COMMENT,"
                    + "b.reference AS booking_reference,"
                    + "b.balance_in_cents AS amount_owing,"
                    + "b.gross_in_cents AS booking_gross,"
                    + "(b.gross_in_cents - b.commission_in_cents)AS booking_nett,"
                    + "b.state  AS booking_state,"
                    + "b.first_travel_date  AS booking_first_travel_date,"
                    + "b.created_at AS booking_created_at,"
                    + "date(b.first_travel_date) AS booking_first_travel_date_indate,"
                    + "hour(b.first_travel_date)*3600 + minute(b.first_travel_date)*60 + second(b.first_travel_date) AS booking_first_travel_time_insec,"
                    + "date(b.created_at) AS booking_created_date,"
                    + "hour(b.created_at)*3600 + minute( b.created_at)*60 + second(b.created_at) AS booking_created_time_insec,"
                    + "payments.creator_id  AS user_dimension_id,"
                    + "b.web_site_id,"
                    + "payments.till_id,"
                    + "payments.id AS payments_id,"
                    + "'payments' AS source_table,"
                    + "b.post_code AS geographic_dimension_id,"
                    + "b.client_id AS client_dimension_id,"
                    + "b.company_creator_id AS department_dimension_id,"
                    + "null vendor_id ,"
                    + "b.id booking_id ,"
                    + "payments.payment_type_id ,"
                    + "'QuickTravel' AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3, "
                    + "payments.uid AS uid "
                    + " FROM payments AS payments"
                    //                    + " LEFT JOIN bookings AS b"
                    + " LEFT JOIN bookings_view AS b"
                    + " ON b.id = payments.booking_id"
                    + " LEFT JOIN payment_types AS payment_types"
                    //                    + " ON payment_types.id = payments.payment_type_id where " + incr
                    + " ON payment_types.id = payments.payment_type_id "
                    + " where payments.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')"
                    + " GROUP BY payments.id order by payments.id";

            limitMysqlRow = true;
        }

        if (tabname.equalsIgnoreCase("vendor_dimension_stg")) {
            sql = "SELECT p.first_name AS first_name,"
                    + "p.last_name AS last_name,"
                    + "IF(p.type = 'Person', concat(p.last_name, ', ', p.first_name), p.name) AS name,"
                    + "contacts.email AS email,"
                    + "contacts.mobile AS mobile,"
                    + "contacts.phone AS phone,"
                    + "contacts.website AS website,"
                    + "p.active AS active,"
                    + "vendors.external_identifier AS external_identifier,"
                    + "vendors.acknowledgement_medium AS acknowledgement_medium,"
                    + "vendors.created_at AS created_at,"
                    + "vendors.updated_at AS updated_at,"
                    + "date(vendors.created_at) AS created_date,"
                    + "hour(vendors.created_at)*3600 + minute(vendors.created_at)*60 + second(vendors.created_at) AS created_time_insec,"
                    + "date(vendors.updated_at) AS updated_date,"
                    + "hour(vendors.updated_at)*3600 + minute(vendors.updated_at)*60 + second(vendors.updated_at) AS updated_time_insec,"
                    + "vendors.id AS vendor_id,"
                    + "'vendors' AS source_table,"
                    + "'QuickTravel' AS source_db, "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + "FROM vendors AS vendors "
                    + "LEFT JOIN parties_view AS p "
                    + "ON vendors.party_id = p.id "
                    //                    + "LEFT JOIN contacts AS contacts "
                    + "LEFT JOIN contacts_view AS contacts "
                    + "ON contacts.party_id = p.id "
                    + "where vendors.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')";
            limitMysqlRow = false;

        }
        if (tabname.equalsIgnoreCase("prg_fin_GL_acc_master_stg")) {

            sql = "SELECT  ACCTID,"
                    + "A.AUDTDATE,"
                    + "A.AUDTTIME,"
                    + "A.AUDTUSER,"
                    + "A.AUDTORG,"
                    + "CREATEDATE,"
                    + "ACCTDESC,"
                    + "ACCTTYPE,"
                    + "ACCTBAL,"
                    + "ACTIVESW,"
                    + "CONSLDSW,"
                    + "QTYSW,"
                    + "UOM,"
                    + "ALLOCSW,"
                    + "ACCTOFSET,"
                    + "ACCTSRTY,"
                    + "MCSW,"
                    + "SPECSW,"
                    + "ACCTGRPCOD,"
                    + "CTRLACCTSW ,"
                    + "SRCELDGID,"
                    + "ALLOCTOT,"
                    + "ABRKID ,"
                    + "YRACCTCLOS,"
                    + "ACCTFMTTD,"
                    + "ACSEGVAL01,"
                    + "ACSEGVAL02,"
                    + "ACSEGVAL03,"
                    + "ACSEGVAL04,"
                    + "ACSEGVAL05,"
                    + "ACSEGVAL06,"
                    + "ACSEGVAL07,"
                    + "ACSEGVAL08,"
                    + "ACSEGVAL09,"
                    + "ACSEGVAL10,"
                    + "ACCTSEGVAL,"
                    + "ACCTGRPSCD,"
                    + "POSTOSEGID,"
                    + "DEFCURNCOD,"
                    + "OVALUES,"
                    + "TOVALUES,"
                    + "ROLLUPSW,"
                    + "IDSEG,"
                    + "SEGVAL,"
                    + "SEGVALDESC,"
                    + "ACCTRETERN, "
                    + "'GLAMF' AS source_table,"
                    + "'Accpac' AS source_db, "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + "FROM GLAMF A,GLASV S "
                    + "where A.ACSEGVAL02=S.SEGVAL";

            limitMysqlRow = false;
        }
        if (tabname.equalsIgnoreCase("prg_fin_gl_acc_stg")) {
            sql = "SELECT ACCTID,"
                    + "FSCSYR,"
                    + "FSCSDSG,"
                    + "FSCSCURN,"
                    + "CURNTYPE,"
                    + "AUDTDATE,"
                    + "AUDTTIME,"
                    + "AUDTUSER,"
                    + "AUDTORG,"
                    + "SWRVL,"
                    + "CODERVL ,"
                    + "SCURNDEC,"
                    + "OPENBAL,"
                    + "NETPERD1,"
                    + "NETPERD2,"
                    + "NETPERD3,"
                    + "NETPERD4,"
                    + "NETPERD5,"
                    + "NETPERD6,"
                    + "NETPERD7,"
                    + "NETPERD8,"
                    + "NETPERD9,"
                    + "NETPERD10,"
                    + "NETPERD11,"
                    + "NETPERD12,"
                    + "NETPERD13,"
                    + "NETPERD14,"
                    + "NETPERD15,"
                    + "ACTIVITYSW,(case when FSCSDSG = '1' then  NETPERD1"
                    + " +NETPERD2"
                    + " +NETPERD3"
                    + " +NETPERD4"
                    + " +NETPERD5"
                    + " +NETPERD6"
                    + " +NETPERD7"
                    + " +NETPERD8"
                    + " +NETPERD9"
                    + " +NETPERD10"
                    + " +NETPERD11"
                    + " +NETPERD12"
                    + " +NETPERD13"
                    + " +NETPERD14"
                    + " +NETPERD15 else 0 end)  Budgeted,"
                    + "( case when FSCSDSG = 'A' then  NETPERD1"
                    + " +NETPERD2"
                    + " +NETPERD3"
                    + " +NETPERD4"
                    + " +NETPERD5"
                    + " +NETPERD6"
                    + " +NETPERD7"
                    + " +NETPERD8"
                    + " +NETPERD9"
                    + " +NETPERD10"
                    + " +NETPERD11"
                    + " +NETPERD12"
                    + " +NETPERD13"
                    + " +NETPERD14"
                    + " +NETPERD15 else 0 end ) Actual,"
                    + "'GLAMF'AS source_table,"
                    + "'Accpac' AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM GLAFS where " + incr;

            limitMysqlRow = false;
        }
        if (tabname.equalsIgnoreCase("prg_fin_debtor_stg")) {
            sql = "SELECT IDCUST,"
                    + "CNTYR,"
                    + "CNTPERD,"
                    + "AUDTDATE,"
                    + "AUDTTIME,"
                    + "AUDTUSER,"
                    + "AUDTORG,"
                    + "CNTINVC,"
                    + "CNTCR,"
                    + "CNTDR,"
                    + "CNTPAYM ,"
                    + "CNTDISC,"
                    + "CNTADJ,"
                    + "CNTWROF,"
                    + "CNTINTT,"
                    + "CNTRIF,"
                    + "CNTINVCPD,"
                    + "CNTDTOPAY,"
                    + "AMTINVCHC,"
                    + "AMTCRHC,"
                    + "AMTDRHC,"
                    + "AMTPAYMHC,"
                    + "AMTDISCHC,"
                    + "AMTADJHC,"
                    + "AMTWROFHC,"
                    + "AMTINTTHC,"
                    + "AMTRIFHC,"
                    + "AMTINVPDHC,"
                    + "AMTINVCTC,"
                    + "AMTCRTC,"
                    + "AMTDRTC,"
                    + "AMTPAYMTC,"
                    + "AMTDISCTC,"
                    + "AMTADJTC,"
                    + "AMTWROFTC,"
                    + "AMTINTTTC,"
                    + "AMTRIFTC,"
                    + "AMTINVPDTC,"
                    + "AMTBARVALT,"
                    + "AVGDAYSPAY,"
                    + "CNTRF,"
                    + "AMTRFHC,"
                    + "AMTRFTC,"
                    + "'GLAMF'AS source_table,"
                    + "'Accpac' AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM ARCSM where " + incr;

            limitMysqlRow = false;

        }
        if (tabname.equalsIgnoreCase("prg_fin_customer_stg")) {
            sql = "SELECT IDCUST,"
                    + "AUDTDATE,"
                    + "AUDTTIME,"
                    + "AUDTUSER,"
                    + "AUDTORG,"
                    + "TEXTSNAM,"
                    + "IDGRP,"
                    + "IDNATACCT,"
                    + "SWACTV,"
                    + "DATEINAC,"
                    + "DATELASTMN,"
                    + "SWHOLD,"
                    + "DATESTART,"
                    + "IDPPNT,"
                    + "CODEDAB,"
                    + "CODEDABRTG,"
                    + "DATEDAB,"
                    + "NAMECUST,"
                    + "TEXTSTRE1,"
                    + "TEXTSTRE2,"
                    + "TEXTSTRE3,"
                    + "TEXTSTRE4,"
                    + "NAMECITY,"
                    + "CODESTTE,"
                    + "CODEPSTL,"
                    + "CODECTRY,"
                    + "NAMECTAC,"
                    + "TEXTPHON1,"
                    + "TEXTPHON2,"
                    + "CODETERR,"
                    + "IDACCTSET,"
                    + "IDAUTOCASH,"
                    + "IDBILLCYCL,"
                    + "IDSVCCHRG,"
                    + "IDDLNQ,"
                    + "CODECURN,"
                    + "SWPRTSTMT,"
                    + "SWPRTDLNQ,"
                    + "SWBALFWD,"
                    + "CODETERM,"
                    + "IDRATETYPE,"
                    + "CODETAXGRP ,"
                    + "IDTAXREGI1,"
                    + "IDTAXREGI2,"
                    + "IDTAXREGI3,"
                    + "IDTAXREGI4,"
                    + "IDTAXREGI5,"
                    + "TAXSTTS1,"
                    + "TAXSTTS2,"
                    + "TAXSTTS3,"
                    + "TAXSTTS4,"
                    + "TAXSTTS5,"
                    + "AMTCRLIMT,"
                    + "AMTBALDUET,"
                    + "AMTBALDUEH,"
                    + "DATELASTST,"
                    + "AMTLASTSTT,"
                    + "AMTLASTSTH,"
                    + "DTBEGBALFW,"
                    + "AMTBALFWDT,"
                    + "AMTBALFWDH,"
                    + "DTLASTRVAL,"
                    + "AMTBALLARV,"
                    + "CNTOPENINV,"
                    + "CNTINVPAID,"
                    + "DAYSTOPAY,"
                    + "DATEINVCHI,"
                    + "DATEBALHI,"
                    + "DATEINVHIL,"
                    + "DATEBALHIL,"
                    + "DATELASTAC,"
                    + "DATELASTIV,"
                    + "DATELASTCR,"
                    + "DATELASTDR,"
                    + "DATELASTPA,"
                    + "DATELASTDI,"
                    + "DATELASTAD,"
                    + "DATELASTWR,"
                    + "DATELASTRI ,"
                    + "DATELASTIN,"
                    + "DATELASTDQ,"
                    + "IDINVCHI,"
                    + "IDINVCHILY,"
                    + "AMTINVHIT ,"
                    + "AMTBALHIT,"
                    + "AMTINVHILT,"
                    + "AMTBALHILT,"
                    + "AMTLASTIVT,"
                    + "AMTLASTCRT ,"
                    + "AMTLASTDRT,"
                    + "AMTLASTPYT,"
                    + "AMTLASTDIT,"
                    + "AMTLASTADT,"
                    + "AMTLASTWRT,"
                    + "AMTLASTRIT,"
                    + "AMTLASTINT,"
                    + "AMTINVHIH,"
                    + "AMTBALHIH,"
                    + "AMTINVHILH ,"
                    + "AMTBALHILH,"
                    + "AMTLASTIVH,"
                    + "AMTLASTCRH,"
                    + "AMTLASTDRH,"
                    + "AMTLASTPYH,"
                    + "AMTLASTDIH,"
                    + "AMTLASTADH,"
                    + "AMTLASTWRH,"
                    + "AMTLASTRIH ,"
                    + "AMTLASTINH,"
                    + "CODESLSP1,"
                    + "CODESLSP2 ,"
                    + "CODESLSP3,"
                    + "CODESLSP4,"
                    + "CODESLSP5 ,"
                    + "PCTSASPLT1,"
                    + "PCTSASPLT2,"
                    + "PCTSASPLT3,"
                    + "PCTSASPLT4,"
                    + "PCTSASPLT5,"
                    + "PRICLIST,"
                    + "CUSTTYPE,"
                    + "AMTPDUE,"
                    + "EMAIL1,"
                    + "EMAIL2,"
                    + "WEBSITE,"
                    + "BILLMETHOD,"
                    + "NULL CCNUMBER,"
                    + "NULL CCEXP,"
                    + "NULL CCNAME ,"
                    + "PAYMCODE,"
                    + "FOB,"
                    + "SHPVIACODE,"
                    + "SHPVIADESC,"
                    + "DELMETHOD,"
                    + "PRIMSHIPTO,"
                    + "CTACPHONE,"
                    + "CTACFAX,"
                    + "SWPARTSHIP,"
                    + "SWWEBSHOP,"
                    + "RTGPERCENT,"
                    + "RTGDAYS,"
                    + "RTGTERMS,"
                    + "RTGAMTTC,"
                    + "RTGAMTHC,"
                    + "CNTPPDINVC,"
                    + "AMTPPDINVT,"
                    + "AMTPPDINVH,"
                    + "DATELASTRF,"
                    + "AMTLASTRFT ,"
                    + "AMTLASTRFH,"
                    + "CODECHECK,"
                    + "NEXTCUID,"
                    + "LOCATION ,"
                    + "SWCHKLIMIT ,"
                    + "SWCHKOVER,"
                    + "OVERDAYS,"
                    + "OVERAMT,"
                    + "NULL CCTYPE,"
                    + "SWBACKORDR,"
                    + "SWCHKDUPPO,"
                    + "'GLAMF' AS source_table,"
                    + "'Accpac' AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM ARCUS a where " + incr;

            limitMysqlRow = false;
        }
        if (tabname.equalsIgnoreCase("prg_qt_account_dim_stg")) {
            sql = "SELECT accounts.id AS account_id,"
                    + "accounts.name AS name,"
                    + "accounts.external_identifier AS external_identifier,"
                    + "accounts.account_type AS account_type,"
                    + "accounts.created_at AS created_at,"
                    + "accounts.updated_at AS updated_at,"
                    + "'Accounts' AS source_table,"
                    + "'QuickTravel' AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM accounts "
                    + " where accounts.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')";

            limitMysqlRow = false;
        }
//        if(tabname.equalsIgnoreCase("prg_qt_account_dim"))
//       {
//          sql="SELECT prg_qt_account_dim_stg.account_id AS account_id," +
//                  "prg_qt_account_dim_stg.name AS name," +
//                  "prg_qt_account_dim_stg.name AS Acc_Type1," +
//                  "prg_qt_account_dim_stg.name AS Acc_Type2," +
//                  "prg_qt_account_dim_stg.name AS Acc_Type3," +
//                  "prg_qt_account_dim_stg.name AS Acc_cat1," +
//                  "prg_qt_account_dim_stg.name AS Acc_cat2," +
//                  "prg_qt_account_dim_stg.name AS Acc_cat3," +
//                  "prg_qt_account_dim_stg.external_identifier AS external_identifier," +
//                  "prg_qt_account_dim_stg.account_type AS account_type," +
//                  "prg_qt_account_dim_stg.created_at AS created_at," +
//                  "prg_qt_account_dim_stg.updated_at AS updated_at," +
//                  "prg_qt_account_dim_stg.source_table AS source_table," +
//                  "prg_qt_account_dim_stg.source_db AS source_db" +
//                  " FROM prg_qt_account_dim_stg";
//        }


        if (tabname.equalsIgnoreCase("prg_Calls_Dim_stg")) {
            sql = "SELECT Calls.ID CallsUnique_ID,"
                    + "[Key] Call_id, "
                    + " DNIS,"
                    + " CLID,"
                    + " CallTransactionID,"
                    + " 'prg_Calls_Dim_fact' AS source_table,"
                    + " 'QuickTravel' AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM Calls where " + incr;

            limitMysqlRow = false;
        }
        if (tabname.equalsIgnoreCase("prg_calls_fact_stg")) {
            sql = "select Calls.ID CallsUnique_ID,"
                    + "CallTransactionID ,"
                    + "CAST(CONVERT(CHAR(10), DateTimeStart, 120) AS DATETIME) AS StartDate,"
                    + "CAST(CONVERT(CHAR(8), DateTimeStart, 108) AS DATETIME) AS StartTime,"
                    + "datepart(ss,DateTimeStart) *1 + datepart(mi,DateTimeStart) *60 +datepart(hh,DateTimeStart) *3600  CallStartTimeInSec,"
                    + "[Key] AS CallID,"
                    + "CLID AS CallingLineID,"
                    + "Extension AS CallExtensionNumber,"
                    + "[Group] AS CallQueueNumber,"
                    + "CallType AS CallTypeID,"
                    + "Notes AS CallNotes,"
                    + "GOS AS CallServiceLevel,"
                    + "DateTimeStart AS DateTimeStart,"
                    + "DialledNumber = CASE WHEN NOT CallType = 'I' THEN DNIS ELSE NULL END,"
                    + "ExternalCall AS ExternalCall,"
                    + "Type AS ItemType,"
                    + "ReceivingDDI = CASE WHEN CallType = 'I' THEN DNIS ELSE NULL END,"
                    + "ReleaseType AS ReleaseTypeID,"
                    + "HoldDuration AS TimeHold,"
                    + "TimePending AS TimePending,"
                    + "TimeQueue AS TimeQueue,"
                    + "TimeRing AS TimeRing,"
                    + "TimeTalk AS TimeTalk,"
                    + "WrapupDuration AS TimeWrapup,"
                    + "TransferredTo AS TransferredTo,"
                    + "Trunk AS Trunk,"
                    + "VirtualQueue AS VirtualQueue,"
                    + "Unattended AS Unattended,"
                    + "UnattendedType AS UnattendedType,"
                    + "UnattendedValue AS UnattendedValue,"
                    + "CASE WHEN CallType = 'I' THEN 1 ELSE 0 END AS IncomingCount, "
                    + "CASE WHEN CallType = 'I' THEN TimeTalk ELSE 0 END AS IncomingTimeTalk, "
                    + "CASE WHEN CallType = 'O' THEN 1 ELSE 0 END AS OutgoingCount, "
                    + "CASE WHEN CallType = 'O' THEN TimeTalk ELSE 0 END AS OutgoingTimeTalk, "
                    + "CASE WHEN CallType IN ('U','C') THEN 1 ELSE 0 END AS QueueCount, "
                    + "CASE WHEN CallType IN ('U','C') THEN TimeTalk ELSE 0 END AS QueueTimeTalk, "
                    + "CASE WHEN CallType = 'I' THEN TimeRing ELSE 0 END AS IncomingTimeRing, "
                    + "CASE WHEN CallType = 'O' THEN TimeRing ELSE 0 END AS OutgoingTimeRing, "
                    + "CASE WHEN CallType IN ('U','C') THEN TimeRing ELSE 0 END AS QueueTimeRing, "
                    + "CASE WHEN CallType  = 'I' THEN TimeQueue ELSE 0 END AS IncomingTimeQueue, "
                    + "CASE WHEN CallType = 'O' THEN TimeQueue ELSE 0 END AS OutgoingTimeQueue, "
                    + "CASE WHEN CallType IN ('U','C') THEN TimeQueue ELSE 0 END AS QueueTimeQueue, "
                    + "CASE WHEN CallType  = 'I' THEN TimePending ELSE 0 END AS IncomingTimePending, "
                    + "CASE WHEN CallType = 'O' THEN TimePending ELSE 0 END AS OutgoingTimePending, "
                    + "CASE WHEN CallType IN ('U','C') THEN TimePending ELSE 0 END AS QueueTimePending, "
                    + "CASE WHEN CallType = 'I' THEN HoldDuration ELSE 0 END AS IncomingTimeHold, "
                    + "CASE WHEN CallType = 'O' THEN HoldDuration ELSE 0 END AS OutgoingTimeHold, "
                    + "CASE WHEN CallType IN ('U','C') THEN HoldDuration ELSE 0 END AS QueueTimeHold , "
                    + "CASE WHEN ReleaseType  = 'Q' then 1 else 0 end Abandoned_call_cnt,"
                    + "CASE WHEN ReleaseType = 'V' then 1 else 0 end Voice_Mail_Handled_call_cnt, "
                    + "CASE WHEN ReleaseType = 'D' then 1 else 0 end Callback_Deleted__call_cnt, "
                    + "CASE WHEN ReleaseType = 'N' then 1 else 0 end Normal_call_cnt, "
                    + "CASE WHEN ReleaseType = 'R' then 1 else 0 end Callback_Rescheduled_call_cnt, "
                    + "CASE WHEN ReleaseType = 'Q' then TimeTalk else 0 end Abandoned_Time_Talk, "
                    + "CASE WHEN ReleaseType = 'V' then TimeTalk else null end Voice_Mail_Handled_Time_Talk, "
                    + "CASE WHEN ReleaseType = 'D' then TimeTalk else null end Callback_Deleted_Time_Talk, "
                    + "CASE WHEN ReleaseType = 'N' then TimeTalk else null end Normal_Time_Talk, "
                    + "CASE WHEN ReleaseType = 'R' then TimeTalk else null end Callback_Rescheduled_Time_Talk, "
                    + " CASE WHEN ReleaseType= 'Q' then TimeRing else 0 end Abandone_Time_Ring, "
                    + "CASE WHEN ReleaseType = 'V' then TimeRing else null end Voice_Mail_Handled_Time_Ring, "
                    + " CASE WHEN ReleaseType= 'D' then TimeRing else null end Callback_Deleted_Time_Ring, "
                    + "CASE WHEN ReleaseType = 'N' then TimeRing else null end Normal_Time_Ring, "
                    + "CASE WHEN ReleaseType = 'R' then TimeRing else null end Callback_Rescheduled_Time_Ring, "
                    + "CASE WHEN ReleaseType = 'Q' then TimeQueue else 0 end Abandone_Time_Queue, "
                    + "CASE WHEN ReleaseType = 'V' then TimeQueue else null end Voice_Mail_Handled_Time_Queue, "
                    + "CASE WHEN ReleaseType = 'D' then TimeQueue else null end Callback_Deleted_Time_Queue, "
                    + "CASE WHEN ReleaseType = 'N' then TimeQueue else null end Normal_Time_Queue, "
                    + "CASE WHEN ReleaseType = 'R' then TimeQueue else null end Callback_Rescheduled_Time_Queue, "
                    + "CASE WHEN ReleaseType = 'Q' then TimePending else 0 end Abandone_Time_Pending, "
                    + "CASE WHEN ReleaseType = 'V' then TimePending else null end Voice_Mail_Handled_Time_Pending, "
                    + "CASE WHEN ReleaseType = 'D' then TimePending else null end Callback_Deleted_Time_Pending, "
                    + "CASE WHEN ReleaseType = 'N' then TimePending else null end Normal_Time_Pending, "
                    + "CASE WHEN ReleaseType  = 'R' then TimePending else null end Callback_Rescheduled_Time_Pending, "
                    + "CASE WHEN ReleaseType = 'Q' then HoldDuration else 0 end Abandone_Time_Hold, "
                    + "CASE WHEN ReleaseType = 'V' then HoldDuration else null end Voice_Mail_Handled_Time_Hold, "
                    + "CASE WHEN ReleaseType = 'D' then HoldDuration else null end Callback_Deleted_Time_Hold, "
                    + "CASE WHEN ReleaseType = 'N' then HoldDuration else null end Normal_Time_Hold, "
                    + "CASE WHEN ReleaseType = 'R' then HoldDuration else null end Callback_Rescheduled_Time_Hold, "
                    + " 'prg_calls_fact' AS source_table, "
                    + " 'QuickTravel' AS source_db, "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM Calls where " + incr;
            limitMysqlRow = false;

        }
        if (tabname.equalsIgnoreCase("prg_CallType_stg")) {
            sql = "Select CallTypeID,"
                    + " CallTypeDescription,"
                    + " 'prg_CallType_fact'AS source_table,"
                    + " 'QuickTravel'AS source_db, "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " from CallType where " + incr;
            limitMysqlRow = false;

        }
        if (tabname.equalsIgnoreCase("prg_emp_loc_stg")) {
            sql = "SELECT l.ID"
                    + ",l.Extension"
                    + ",l.SettingExtension"
                    + ",l.StartTime"
                    + ",l.StartLocation"
                    + ",lc.LocationTypeDescription StartLocationName"
                    + ",l.StartReturnTime"
                    + ",CAST(CONVERT(CHAR(10), l.EndTime, 120) AS DATETIME) AS ENDTIME,"
                    + "l.EndLocation"
                    + ",lc1.LocationTypeDescription endLocationName"
                    + ",l.EndReturnTime"
                    + ",l.Duration"
                    + ",l.BreakCodeID"
                    + ",'Locations' AS source_table"
                    + ",'QuickTravel'AS source_db"
                    + ",CAST(CONVERT(CHAR(10), l.StartTime, 120) AS DATETIME) AS StartDate"
                    + ",CAST(CONVERT(CHAR(8), l.StartTime, 108) AS DATETIME) AS StartDateTime"
                    + ", datepart(ss,l.StartTime) *1 + datepart(mi,l.StartTime) *60 +datepart(hh,l.StartTime) *3600  StartTimeInSec"
                    + ",CAST(CONVERT(CHAR(10), l.EndTime, 120) AS DATETIME) AS ENDTIMEDate"
                    + ",CAST(CONVERT(CHAR(8), l.EndTime, 108) AS DATETIME) AS ENDTIMETime"
                    + ", datepart(ss,l.EndTime) *1 + datepart(mi,l.EndTime) *60 +datepart(hh,l.EndTime) *3600  EndTimeInSec,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM Locations l"
                    + ", LocationType lc"
                    + ", LocationType lc1 "
                    + "where l.startLocation = lc.LocationTypeID"
                    + " and l.EndLocation = lc1.LocationTypeID";

            limitMysqlRow = false;
        }

        if (tabname.equalsIgnoreCase("prg_Extension_stg")) {
            sql = "select Extension.ID Extension_id,"
                    + " Extension.Tenant,"
                    + " Extension.Type Extension_Type,"
                    + " Extension.Firstname,"
                    + " Extension.Lastname,"
                    + " Extension.Title,"
                    + " Extension.Position,"
                    + " Extension.WrapupTime,"
                    + " Extension.UserLevel,"
                    + " Extension.Email,"
                    + "Extension.Location,"
                    + "Extension.StartTime,"
                    + "Extension.Notes,"
                    + "Extension.RecordInbound,"
                    + "Extension.RecordOutbound,"
                    + "Extension.RecordUCD,"
                    + "Extension.Department,"
                    + "Extension.InDirectory,"
                    + "Extension.CallbackEnabled,"
                    + "Extension.PersonalqueuePriority,"
                    + "Extension.PersonalqueueEnabled,"
                    + "Extension.Register,"
                    + "Extension.LCDName,"
                    + "Extension.WrapupValue,"
                    + "Extension.CanReceiveVM,"
                    + "Extension.TollClassID,"
                    + "Extension.FeatureClassID,"
                    + "Extension.RegionID,"
                    + "Extension.AutoAnswer,"
                    + "Extension.BusinessStartTime,"
                    + "Extension.BusinessEndTime,"
                    + "Extension.AutoAnswerDelay,"
                    + "Extension.MacAddress,"
                    + "Extension.ImagePath,"
                    + "Extension.ImageDate,"
                    + "Extension.OutboundDDIType,"
                    + "Extension.OutboundDDINumber,"
                    + "Extension.SubLocationID,"
                    + "Extension.SyncOCS,"
                    + "ExtensionTYpe.ExtensionTypeID ,"
                    + "ExtensionTYpe.ExtensionTypeDescription,"
                    + "Department.ID Department_ID, "
                    + "Department.Description Department_Desc, "
                    + "Department.BusinessStartTime D_BusinessStartTime, "
                    + "Department.BusinessEndTime D_BusinessEndTime, "
                    + "tblRegions.RegionID tblRegionID,"
                    + "tblRegions.RegionName, "
                    + "tblRegions.RegionTimeBias,"
                    + "tblRegions.RegionBaseTimeBias,"
                    + "tblRegions.AdjustForDayLightSaving , "
                    + "tblRegions.DayLightSavingStart,"
                    + "tblRegions.DayLightSavingEnd,"
                    + "tblRegions.DayLightSavingAdjustment, "
                    + "tblRegions.IsDayLightSaving,"
                    + "tblRegions.WindowsTimeZone,"
                    + "tblRegions.ServerName,"
                    + "tblRegions.DLSStartLocalTime,"
                    + "tblRegions.DLSEndLocalTime,"
                    + "tblRegions.PolycomPolling,"
                    + "TeamExtensions.ExtensionID , "
                    + "Teams.ID Teams_ID, "
                    + "Teams.Description Teams_Desc, "
                    + "tblFeatureClass.Description,"
                    + "tblFeatureClass.ViewUserLevel,"
                    + "LocationType.LocationTypeID,"
                    + "LocationType.LocationTypeDescription,"
                    + "LocationType.Keywords,"
                    + " 'prg_Extension_fact' AS source_table,"
                    + " 'QuickTravel' AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " from  Extension"
                    + " LEFT OUTER JOIN ExtensionType ON Extension.Type = ExtensionType.ExtensionTypeID "
                    + " LEFT OUTER JOIN Department ON Department.ID = Extension.Department "
                    + " LEFT OUTER JOIN tblRegions ON tblRegions.RegionID = Extension.RegionID "
                    + " LEFT OUTER JOIN (SELECT min(TeamID) TeamID, "
                    + " ExtensionID "
                    + " FROM TeamExtensions "
                    + " group by ExtensionID ) "
                    + " TeamExtensions "
                    + " ON TeamExtensions.ExtensionID = Extension.ID "
                    + " LEFT OUTER JOIN Teams ON Teams.ID = TeamExtensions.TeamID "
                    + " LEFT OUTER JOIN DDI ON DDI.DayDestination = Extension.ID "
                    + " OR DDI.NightDestination = ExtensionID "
                    + " LEFT OUTER JOIN     tblFeatureClass "
                    + " ON tblFeatureClass.FeatureClassID = Extension.FeatureClassID "
                    + " LEFT OUTER JOIN    LocationType "
                    + " ON LocationType.LocationTypeID = Extension.Location where " + incr;

            limitMysqlRow = false;
        }
        if (tabname.equalsIgnoreCase("prg_LocationType_stg")) {
            sql = "Select LocationType.LocationTypeID,"
                    + " LocationType.LocationTypeDescription,"
                    + " case when LocationType.Keywords is not null then LocationType.Keywords "
                    + " else 'NA' End LA_Keywords,"
                    + " 'prg_LocationType_fact'AS source_table,"
                    + " 'QuickTravel'AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " from LocationType where " + incr;
            limitMysqlRow = false;
        }
        if (tabname.equalsIgnoreCase("prg_ReleaseType_stg")) {
            sql = "Select ReleaseTypeID, "
                    + " ReleaseTypeDescription, "
                    + " 'prg_ReleaseType_fact'AS source_table, "
                    + " 'QuickTravel' AS source_db, "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " from ReleaseType where " + incr;
            limitMysqlRow = false;
        }
        if (tabname.equalsIgnoreCase("prg_Queue_stg")) {
            sql = "SELECT  queue1.ID queue_id ,"
                    + "queue1.Description queue_desc,"
                    + "queue1.queuePriority,"
                    + "queue1.TimePriority,"
                    + "queue1.SkillPriority,"
                    + "queue1.CustomerPriority,"
                    + "queue1.VoiceMailPriority,"
                    + "queue1.PreferredAgentPriority,"
                    + "queue1.PreferredAgentWaitTime,"
                    + "queue1.Notes,"
                    + "queue1.DialledNumberPriority,"
                    + "queue1.ForcedWrapup,"
                    + "queue1.Tenant,"
                    + "queue1.Virtual,"
                    + "queue1.MinimumAbandonTime,"
                    + "queue1.Abbreviation,"
                    + "queue1.LCDFormat,"
                    + "queue1.queueGroupID,"
                    + "queue1.Password,"
                    + "queue1.WrapupFolderID,"
                    + "queue1.PullbackToqueue,"
                    + "queue1.PermanentlyLogout,"
                    + "queue1.UseDefaultHolidays,"
                    + "queue1.queueStyle,"
                    + "queue1.DistributionStyle,"
                    + "queue1.UseManualProfile,"
                    + "queue1.ManualProfileID,"
                    + "queue1.LastAgentEnabled,"
                    + "queue1.LastAgentWaitTime,"
                    + "queue1.LastAgentValidity,"
                    + "queue1.WarningFlags,"
                    + "queue1.CycleThroughAgents,"
                    + "queue1.AfterCycleRouteType,"
                    + "queue1.AfterCycleRouteDestination,"
                    + "queue1.TimeOfDayRouting,"
                    + "queueGroups.ID queue1Groups_id,"
                    + "queueGroups.Description queue1Groups_desc,"
                    + "WrapupFolders.ID WrapupFolders_ID,"
                    + "WrapupFolders.Description WrapupFolders_Desc,"
                    + "WrapupFolders.ID WrapupFolders_ParentID,"
                    + "WrapupFolders.Description WrapupParFolders_Desc,"
                    + "'prg_Queue_fact' AS source_table,"
                    + " 'QuickTravel' AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM [Group] queue1 LEFT OUTER JOIN queueGroups "
                    + " ON queueGroups.ID = queue1.queueGroupID "
                    + " LEFT OUTER JOIN dbo.WrapupFolders "
                    + " ON WrapupFolders.ID = queue1.WrapupFolderID "
                    + " where " + incr;
            limitMysqlRow = false;
        }
        if (tabname.equalsIgnoreCase("prg_QueueItemTypes_stg")) {
            sql = "select ID  QueueItemTypesId,"
                    + "Description  QueueItemTypesDesc,"
                    + " 'prg_QueueItemTypes_fact' AS source_table,"
                    + " 'QuickTravel' AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " from QueueItemTypes where " + incr;

            limitMysqlRow = false;
        }
        if (tabname.equalsIgnoreCase("prg_team_stg")) {
            sql = "select TeamExtensions.ExtensionID,"
                    + "Teams.ID Teams_ID,"
                    + "Teams.Description Teams_Desc,"
                    + "'prg_team_fact'AS source_table,"
                    + "'QuickTravel'AS source_db,"
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " from	(SELECT min(TeamID) TeamID,"
                    + "ExtensionID FROM TeamExtensions"
                    + " group by ExtensionID)"
                    + " TeamExtensions INNER JOIN"
                    + " Teams ON dbo.Teams.ID = TeamExtensions.TeamID where " + incr;
            limitMysqlRow = false;
        }
        if (tabname.equalsIgnoreCase("prg_booking_pass_stg")) {
            sql = "SELECT distinct pt.name AS passenger_type,"
                    + "consumers.age AS age,"
                    + "cs.consumer_splittable_id AS reservation_id,"
                    + "cs.gross_in_cents AS pre_adjusted_gross,"
                    + "(SELECT SUM(ads.gross_in_cents) "
                    + "FROM consumer_splits ads "
                    + " LEFT JOIN adjustments_view AS a "
                    + " ON ads.consumer_splittable_type = 'Adjustment' "
                    + " where ads.consumer_splittable_id = a.id "
                    + " AND ads.consumer_id = cs.consumer_id "
                    + " AND case when  a.adjustable_item_id is null then 1 "
                    + " else a.adjustable_item_id end   =  case when  a.adjustable_item_id is null then 1 "
                    + " else cs.consumer_splittable_id end   ) AS total_adjustments,"
                    + " consumers.first_name AS first_name,"
                    + "consumers.last_name  AS last_name,"
                    + "consumers.type as consumers_type,"
                    + "cs.id AS consumer_splits_id,"
                    + "consumers.id as consumers_id,"
                    + "bookings.post_code AS geographic_dimension_id,"
                    + "bookings.client_id AS client_dimension_id,"
                    + "bookings.creator_id AS user_dimension_id,"
                    + "bookings.company_creator_id AS department_dimension_id,"
                    + "bookings.customer_contact_name AS customer_contact_name,"
                    + "bookings.customer_contact_phone AS customer_contact_phone,"
                    + "bookings.customer_contact_mobile AS customer_contact_mobile,"
                    + "bookings.public_comments AS public_comments,"
                    + "bookings.internal_comments AS private_comments,"
                    + "rce.vendor_id AS vendor_dimension_id,"
                    + "bookings.state AS booking_state,"
                    + "bookings.id AS booking_id,"
                    + "bookings.reference AS booking_reference,"
                    + "bookings.first_travel_date AS first_travel_date,"
                    + "date(res.first_travel_date) AS res_travel_date_indate,"
                    + "hour(res.first_travel_date)*3600 + minute(bookings.first_travel_date)*60 + "
                    + "second(bookings.first_travel_date) AS res_travel_time_insec,"
                    + "date(bookings.created_at) AS created_date,hour(bookings.created_at)*3600 + "
                    + "minute(bookings.created_at)*60 + second(bookings.created_at) AS created_time_insec,"
                    + "date(bookings.updated_at) AS updated_date,"
                    + "hour(bookings.updated_at)*3600 + minute(bookings.updated_at)*60 + second(bookings.updated_at) "
                    + "AS updated_time_insec,case when res.trip_id is not null then res.trip_id  else -1 end as trip_id,"
                    + "case when res.fare_basis_set_id is not null then  res.fare_basis_set_id  else -1 end as fare_basis_set_id,"
                    + "res.resource_id AS product_component_dimension_id,"
                    + "res.active AS reservation_active,"
                    + "res.pick_up_information AS pick_up_information,"
                    + "res.drop_off_information AS drop_off_information,"
                    + "res.id AS Component_id,"
                    + "res.comment AS COMMENT,"
                    + "case when fbs.tariff_level_id is not null then fbs.tariff_level_id else -1 end as tariff_level_id,"
                    + "'consumer_splits' AS source_table,"
                    + "0 package_id,"
                    + "'NA' package_name,"
                    + "'QuickTravel' AS source_db ,"
                    + "bookings.web_site_id  value5 ,"
                    + " consumers.passenger_type_id value3,"
                    + " consumers.gender value2,"
                    + " countries.name AS country, "
                    + " bookings.created_at AS bookings_created_at,"
                    + " bookings.updated_at AS bookings_updated_at,"
                    + " bookings.created_at AS bookings_created_at_gmt,"
                    + " bookings.updated_at AS bookings_updated_at_gmt,"
                    + " res.created_at AS res_created_at,"
                    + " res.updated_at AS res_updated_at,"
                    + " res.created_at AS res_created_at_gmt,"
                    + " res.updated_at AS res_updated_at_gmt, "
                    //                    + " NULL till_id, "
                    + " res.reservation_group_id AS reservation_group_id, "
                    + " cs.consumer_splittable_type consumer_splittable_type,"
                    + " date(res.created_at) res_created_date,"
                    //new cols
                    + "vehicle_types.name        AS vehicle_type,"
                    + "consumers.length          AS vehicle_length,"
                    + "consumers.details         AS vehicle_details,"
                    + "consumers.cargo           AS vehicle_cargo_notes,"
                    + "vehicle_types.has_cargo   AS has_cargo,"
                    + "cs.consumer_splittable_id AS consumer_splittable_id,"
                    + "cs.id                     AS source_id,"
                    + "bookings.gross_in_cents   AS gross,"
                    + "web_sites.host            AS web_site_url,"
                    + "referral_codes.code       AS referral_code,"
                    + "vehicle_types.id          AS vehicle_type_id,"
                    + "cs.gross_in_cents         AS gross_in_cents,"
                    + "bookings.created_at       AS created_at_gmt,"
                    + "bookings.updated_at       AS updated_at_gmt,"
                    + "NULL                      AS till_id, "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3, "
                    + "consumers.weight AS tonnage "
                    + "FROM consumer_splits        AS cs "
                    + "LEFT JOIN consumers         AS consumers"
                    + " ON consumers.id = cs.consumer_id"
                    + " LEFT JOIN passenger_types AS pt"
                    + " ON consumers.passenger_type_id = pt.id"
                    + " LEFT JOIN adjustments_view AS a"
                    + " ON a.adjustable_item_type = 'Reservation'"
                    + " AND a.adjustable_item_id  = cs.consumer_splittable_id"
                    + " LEFT JOIN consumer_splits AS ads"
                    + " ON ads.consumer_splittable_type = 'Adjustment'"
                    + " AND ads.consumer_splittable_id  = a.id"
                    + " AND ads.consumer_id             = cs.consumer_id"
                    //                    + " LEFT JOIN bookings AS bookings"
                    + " LEFT JOIN bookings_view AS bookings"
                    + " ON bookings.id = consumers.booking_id"
                    + " LEFT JOIN countries AS countries"
                    + " ON bookings.country_id = countries.id"
                    //                    + " LEFT JOIN reservations res"
                    + " LEFT JOIN reservations_view res"
                    + " ON cs.consumer_splittable_id = res.id"
                    //                    + " LEFT JOIN fare_basis_sets AS fbs"
                    + " LEFT JOIN fare_basis_sets_view AS fbs"
                    + " ON res.fare_basis_set_id = fbs.id"
                    + " LEFT JOIN resources_view AS rce"
                    + " ON rce.id = res.resource_id"
                    //                    + " LEFT JOIN prg_booking_PACK_REF ref1"
                    //                    + " ON res.reservation_group_id = ref1.resource_group_id"
                    + " LEFT JOIN vehicle_types AS vehicle_types"
                    + " ON consumers.vehicle_type_id = vehicle_types.id"
                    + " LEFT JOIN referral_codes AS referral_codes"
                    + " ON bookings.referral_code_id = referral_codes.id"
                    + " LEFT JOIN web_sites AS web_sites"
                    + " ON web_sites.id = bookings.web_site_id"
                    + " LEFT JOIN payments AS payments"
                    + " ON payments.booking_id            = bookings.id"
                    + " WHERE cs.consumer_splittable_type = 'Reservation' "
                    + " AND bookings.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')"
                    + " order by cs.id";
            limitMysqlRow = true;
        }
        if (tabname.equalsIgnoreCase("services_stg")) {
            sql = "SELECT s.date AS service_DATE,"
                    + "s.resource_id AS product_dimension_id,"
                    + "s.booked AS booked,"
                    + "s.capacity AS capacity,"
                    + "(s.capacity - s.booked) AS available,"
                    + "case when s.booked <= s.capacity then 0 "
                    + "else((s.booked - s.capacity)/s.capacity*100) end AS overbooked_percentage,"
                    + "case when capacity is not null then (s.booked /s.capacity)*100 else 0 end AS booked_percentage,"
                    + "fs.name AS from_stop,"
                    + "ts.name AS to_stop,"
                    + "s.from_trip_stop_id,"
                    + "fts.trip_id,"
                    + "fts.route_stop_id,"
                    + "s.to_trip_stop_id,"
                    + "tts.trip_id to_trip_id,"
                    + "tts.route_stop_id to_route_stop_id,"
                    + "fts.time AS departure_time,"
                    + "s.id AS service_id,"
                    + "'services' AS source_table,"
                    + "'QuickTravel' AS source_db, "
                    + "s.created_at AS created_at, "
                    + "s.updated_at AS updated_at,  "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3, "
                    + "s.state AS state, "
                    + "s.peak AS peak  "
                    + "FROM services AS s "
                    + "LEFT JOIN trip_stops AS fts "
                    + "ON fts.id = s.from_trip_stop_id "
                    + "LEFT JOIN trips AS ft "
                    + "ON fts.trip_id = ft.id "
                    + "LEFT JOIN route_stops AS fs "
                    + "ON fs.id = fts.route_stop_id "
                    + "LEFT JOIN trip_stops AS tts "
                    + "ON tts.id = s.to_trip_stop_id "
                    + "LEFT JOIN trips AS tt "
                    + "ON tts.trip_id = tt.id "
                    + "LEFT JOIN route_stops AS ts "
                    + "ON ts.id = tts.route_stop_id "
                    + "WHERE 1=1  "
                    + " and s.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') "
                    + "GROUP BY s.id  "
                    + "order by s.id ";
            limitMysqlRow = true;
        }
        if (tabname.equalsIgnoreCase("trips_stg")) {
            sql = "SELECT distinct s.from_trip_stop_id,"
                    + " fts.trip_id,"
                    + " fts.route_stop_id,"
                    + " s.to_trip_stop_id,"
                    + " tts.trip_id  to_trip_id,"
                    + " tts.route_stop_id to_route_stop_id,"
                    + " fs.name AS from_stop,"
                    + " ts.name AS to_stop,"
                    + "'Trips' AS source_table,"
                    + "'QuickTravel' AS source_db, "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM services AS s "
                    + " LEFT JOIN trip_stops AS fts "
                    + " ON fts.id = s.from_trip_stop_id "
                    + " LEFT JOIN trips AS ft "
                    + " ON fts.trip_id = ft.id "
                    + " LEFT JOIN route_stops AS fs "
                    + " ON fs.id = fts.route_stop_id "
                    + " LEFT JOIN trip_stops AS tts "
                    + " ON tts.id = s.to_trip_stop_id "
                    + " LEFT JOIN trips AS tt "
                    + " ON tts.trip_id = tt.id "
                    + " LEFT JOIN route_stops AS ts "
                    + " ON ts.id = tts.route_stop_id "
                    + " WHERE resource_id IN "
                    + "(SELECT id"
                    + " FROM resources_view "
                    + " WHERE product_type_id ="
                    + "(SELECT id FROM product_types WHERE name = 'Ferry')) "
                    + " and s.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') "
                    + " GROUP BY s.id  order by s.id ,s.date";
            limitMysqlRow = true;
        }

        if (tabname.equalsIgnoreCase("accounting_entries_stg")) {
            sql = "SELECT b.reference AS booking_reference,"
                    + "b.first_travel_date AS booking_first_travel_date, "
                    + "ae.amount_in_cents AS amount,"
                    + "a.name AS account_name,"
                    + "a.external_identifier AS account_external_identifier,"
                    + "ae.description AS description,"
                    + "ae.cost AS cost,"
                    + "a.id AS source_id,"
                    + "ae.id AS line_id,"
                    + "b.id AS booking_id,"
                    + "'accounting_entries' AS source_table,"
                    + "'QuickTravel' AS source_db,"
                    + " ae.vendor_id AS vendor_id,"
                    + " ae.created_at AS created_at,"
                    + " ae.sales_batch_id AS sales_batch_id,"
                    + " ae.account_id AS account_id,"
                    + " sb.created_at AS batch_created_at,"
                    + " sb.creator_id AS creator_id,"
                    + " sb.type AS type,"
                    + " sb.posted AS posted,"
                    + " sb.latest_date_processed AS latest_date_processed,"
                    + " sb.earliest_date_processed AS earliest_date_processed,"
                    + " sb.details AS details,"
                    + " sb.total_costs_in_cents AS total_costs_in_cents,"
                    + " sb.total_sales_in_cents AS total_sales_in_cents,"
                    + " sb.sales_to_date_in_cents AS sales_to_date_in_cents,"
                    + " sb.payments_to_date_in_cents AS payments_to_date_in_cents,"
                    + " sb.payments_after_travel_in_cents AS payments_after_travel_in_cents,"
                    + " sb.background_job_uid AS background_job_uid,"
                    + " sb.running AS running, "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM accounting_entries AS ae"
                    + " LEFT JOIN sales_batches AS sb"
                    + " ON sb.id = ae.sales_batch_id"
                    //                    + " LEFT JOIN bookings AS b"
                    + " LEFT JOIN bookings_view AS b"
                    + " ON b.id = ae.booking_id"
                    + " LEFT JOIN accounts AS a"
                    + " ON a.id = ae.account_id "
                    + " where ae.created_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') "
                    + " order by ae.id,b.first_travel_date";
            limitMysqlRow = true;
        }
        if (tabname.equalsIgnoreCase("prg_adjustments_reservation_stg")) {
            sql = "SELECT "
                    + "a.id adjustments_id,"
                    + "a.currency,"
                    + "a.gross_in_cents,"
                    + "a.created_at,"
                    + "a.creator_id,"
                    + "a.adjustable_item_id reservation_id,"
                    + "a.description,"
                    + "a.active,"
                    + "a.adjustment_category_id,"
                    + "a.adjustable_item_type reservation,"
                    + "a.cached_percentage,"
                    + "a.position,"
                    + "a.should_adjust_commission,"
                    + "a.adjusted_commission_in_cents,"
                    + "a.automatic,"
                    + "a.adjustment_definition_fare_basis_id,"
                    + "a.adjustment_definition_id,"
                    + "a.applicable_on,"
                    + "a.cached_fixed_amount_in_cents,"
                    + "a.updated_at,"
                    + "(r.gross_in_cents - r.commission_in_cents) AS nett,"
                    + "r.gross_in_cents  AS gross,"
                    + "r.commission_in_cents AS commission,"
                    + "r.cost_in_cents AS cost,"
                    + "r.total_adjustments_in_cents AS included_gross_adjustment,"
                    + "r.total_adjusted_commission_in_cents AS included_commission_adjustment,"
                    + "COUNT(DISTINCT(rpax.id)) AS num_passengers,"
                    + "COUNT(DISTINCT(rveh.id)) AS num_vehicles,"
                    + "(SELECT SUM(rveh.length)"
                    + " FROM consumers rveh"
                    + " WHERE rveh.id = rcs.consumer_id"
                    + " AND rveh.type = 'Vehicle') AS length_vehicles,"
                    + "DATEDIFF(r.last_travel_date, r.first_travel_date) + 1 AS duration,"
                    + "r.first_travel_date  AS first_travel_date,"
                    + "b.first_travel_date  AS booking_first_travel_date,"
                    + "b.created_at AS booking_created_at,"
                    + "MIN(ts.time)  AS service_departure_time,"
                    + "from_ts.time AS pickup_time,"
                    + "from_rs.name AS from_stop,"
                    + "to_rs.name AS to_stop,"
                    + "r.pick_up_information AS pick_up_information,"
                    + "r.drop_off_information AS drop_off_information,"
                    + "r.comment AS COMMENT,"
                    + "b.post_code AS geographic_dimension_id,"
                    + "b.client_id AS client_dimension_id,"
                    + "rce.vendor_id AS vendor_dimension_id,"
                    + "b.creator_id AS user_dimension_id,"
                    + "b.company_creator_id AS department_dimension_id,"
                    + "b.reference AS booking_reference,"
                    + "bc.name AS bed_configuration,"
                    + "r.resource_id AS product_component_dimension_id,"
                    + "b.customer_contact_name AS customer_contact_name,"
                    + "b.customer_contact_phone AS customer_contact_phone,"
                    + "b.customer_contact_mobile AS customer_contact_mobile,"
                    + "r.created_at AS res_created_at,"
                    + "r.updated_at AS res_updated_at,"
                    + "b.balance_in_cents AS amount_owed,"
                    + "b.gross_in_cents AS booking_gross,"
                    + "(b.gross_in_cents - b.commission_in_cents) AS booking_nett,"
                    + "b.commission_in_cents AS booking_commission,"
                    + "r.active AS reservation_active,"
                    + "b.state AS booking_state,"
                    + "IF( r.active = 0, 'cancelled', IF( DATE(r.updated_at) = DATE(r.created_at), 'new', 'changed' ) ) AS change_state,"
                    + "tl.name AS tariff_level,"
                    + "fbs.name AS fare_basis_set,"
                    + "r.id AS Component_id,"
                    + "'reservations' AS source_table,"
                    + "0 package_id,"
                    + "'NA' package_name,"
                    + "'QuickTravel' AS source_db, "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3, "
                    + "b.id booking_id "
                    + " FROM adjustments_view AS a "
                    //                    + " LEFT JOIN reservations AS r "
                    + " LEFT JOIN reservations_view AS r "
                    //                    + " ON a.id = r.id "
                    + " ON a.adjustable_item_id = r.id "
                    //                    + " LEFT JOIN bookings AS b "
                    + " LEFT JOIN bookings_view AS b "
                    + " ON r.booking_id = b.id "
                    + " LEFT JOIN consumer_splits AS rcs "
                    + " ON rcs.consumer_splittable_id    = r.id "
                    + " AND rcs.consumer_splittable_type = 'Reservation' "
                    + " LEFT JOIN consumers AS rpax "
                    + " ON rpax.id    = rcs.consumer_id "
                    + " AND rpax.type = 'Passenger' "
                    + " LEFT JOIN consumers AS rveh "
                    + " ON rveh.id    = rcs.consumer_id "
                    + " AND rveh.type = 'Vehicle' "
                    + " LEFT JOIN resources_view AS rce "
                    + " ON rce.id = r.resource_id "
                    + " LEFT JOIN bed_configurations AS bc "
                    + " ON bc.id = r.bed_configuration_id "
                    + " LEFT JOIN trip_stops AS from_ts "
                    + " ON r.from_trip_stop_id = from_ts.id "
                    + " LEFT JOIN route_stops AS from_rs "
                    + " ON from_ts.route_stop_id = from_rs.id "
                    + " LEFT JOIN trip_stops AS to_ts "
                    + " ON r.to_trip_stop_id = to_ts.id "
                    + " LEFT JOIN route_stops AS to_rs "
                    + " ON to_ts.route_stop_id = to_rs.id "
                    + " LEFT JOIN reservations_services AS rs "
                    + " ON rs.reservation_id = r.id "
                    + " LEFT JOIN services AS s "
                    + " ON s.id = rs.service_id "
                    + " LEFT JOIN trip_stops AS ts "
                    + " ON ts.id = s.from_trip_stop_id "
                    + " LEFT JOIN trips AS trip "
                    + " ON ts.trip_id = trip.id "
                    //                    + " LEFT JOIN fare_basis_sets AS fbs "
                    + " LEFT JOIN fare_basis_sets_view AS fbs "
                    + " ON r.fare_basis_set_id = fbs.id "
                    + " LEFT JOIN tariff_levels tl "
                    + " ON fbs.tariff_level_id = tl.id "
                    //                    + " left join prg_booking_PACK_REF ref1 "
                    //                    + " on  r.reservation_group_id = ref1.resource_group_id "
                    + " where a.adjustable_item_type = 'Reservation' "
                    + " and a.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') "
                    + " GROUP BY a.id";
            limitMysqlRow = true;
        }
        if (tabname.equalsIgnoreCase("prg_adjustments_booking_stg")) {
            sql = "SELECT "
                    + "a.id adjustments_id,"
                    + "a.currency,"
                    + "a.gross_in_cents,"
                    + "a.created_at,"
                    + "a.creator_id,"
                    + "a.adjustable_item_id BookingId,"
                    + "a.description,"
                    + "a.active,"
                    + "a.adjustment_category_id,"
                    + "a.adjustable_item_type Booking,"
                    + "a.cached_percentage,"
                    + "a.position,"
                    + "a.should_adjust_commission,"
                    + "a.adjusted_commission_in_cents,"
                    + "a.automatic,"
                    + "a.adjustment_definition_fare_basis_id,"
                    + "a.adjustment_definition_id,"
                    + "a.applicable_on,"
                    + "a.cached_fixed_amount_in_cents,"
                    + "a.updated_at, "
                    + "b.reference AS booking_reference,"
                    + "b.state AS state,"
                    + "b.first_travel_date AS first_travel_date,"
                    + "b.created_at AS bookings_created_at,"
                    + "b.updated_at AS bookings_updated_at,"
                    + "b.gross_in_cents AS gross,"
                    + "b.commission_in_cents AS commission,"
                    + "(b.gross_in_cents - b.commission_in_cents) AS nett,"
                    + "b.balance_in_cents  AS amount_owing,"
                    + "COUNT(DISTINCT(pax.id)) AS num_passengers,"
                    + "referral_codes.code  AS referral_code,"
                    + "countries.name AS country,"
                    + "b.post_code AS geographic_dimension_id,"
                    + "b.client_id AS client_dimension_id,"
                    + "b.creator_id AS user_dimension_id,"
                    + "b.company_creator_id AS department_dimension_id,"
                    + "pax.first_name AS passenger_first_name,"
                    + "pax.last_name AS passenger_last_name,"
                    + "b.customer_contact_name  AS customer_contact_name,"
                    + "b.customer_contact_phone AS customer_contact_phone,"
                    + "b.customer_contact_mobile AS customer_contact_mobile,"
                    + "MIN(payments.created_at) AS first_payment_created_at,"
                    + "b.web_site_id AS web_site_url,"
                    + "b.public_comments AS public_comments,"
                    + "b.internal_comments AS private_comments,"
                    + "b.id AS booking_id,"
                    + "'bookings'  AS source_table,"
                    + "'QuickTravel' AS source_db,"
                    + "sum(res.gross_in_cents) d_gross_in_cents,"
                    + "sum(res.commission_in_cents)  d_commission_in_cents,"
                    + "sum(res.total_adjustments_in_cents) d_total_adjustments_in_cents,"
                    + "sum(res.cost_in_cents) d_cost_in_cents ,"
                    + "sum(res._vendor_paid_in_cents) d_vendor_paid_in_cents ,"
                    + "count(DISTINCT( res.resource_id)) total_comp  ,"
                    + "count(DISTINCT(res.trip_id)) total_trips,"
                    + "sum(res.pre_adjusted_gross_in_cents) d_pre_adjusted_gross_in_cents,"
                    + "sum(res.pre_adjusted_commission_in_cents) d_pre_adjusted_commission_in_cents,"
                    + "sum(res.total_adjusted_commission_in_cents) d_total_adjusted_commission_in_cents, "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM adjustments_view AS a "
                    //                    + " LEFT JOIN bookings AS b "
                    + " LEFT JOIN bookings_view AS b "
                    //                    + " ON b.id = a.id "
                    + " ON b.id = a.adjustable_item_id "
                    //                    + " inner join reservations res on b.id = res.booking_id "
                    + " inner join reservations_view res on b.id = res.booking_id "
                    + " LEFT JOIN consumers         AS pax "
                    + " ON pax.booking_id = b.id "
                    + " AND pax.type      = 'Passenger' "
                    + " LEFT JOIN countries AS countries "
                    + " ON b.country_id = countries.id "
                    + " LEFT JOIN payments AS payments "
                    + " ON payments.booking_id = b.id "
                    + " AND success = 1 "
                    + " LEFT JOIN referral_codes AS referral_codes "
                    + " ON b.referral_code_id = referral_codes.id "
                    + " where a.adjustable_item_type = 'Booking' "
                    + " and a.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') "
                    + " GROUP BY a.id ";
            limitMysqlRow = true;
        }
        if (tabname.equalsIgnoreCase("prg_adjustments_stg")) {
            sql = "select "
                    + "a.id adjustments_id,"
                    + "a.currency,"
                    + "a.gross_in_cents,"
                    + "a.created_at,"
                    + "a.creator_id,"
                    + "a.adjustable_item_id item_id,"
                    + "a.description,"
                    + "a.active,"
                    + "a.adjustment_category_id,"
                    + "a.adjustable_item_type item_type,"
                    + "a.cached_percentage,"
                    + "a.position,"
                    + "a.should_adjust_commission,"
                    + "a.adjusted_commission_in_cents,"
                    + "a.automatic,"
                    + "a.adjustment_definition_fare_basis_id,"
                    + "a.adjustment_definition_id,"
                    + "a.applicable_on,"
                    + "a.cached_fixed_amount_in_cents,"
                    + "a.updated_at,"
                    + "ad.id AS adjustment_definitions_id,"
                    + "ad.name AS adjustment_definitions_name,"
                    + "ad.percentage_value AS percentage_value,"
                    + "ad.percentage AS percentage,"
                    + "ad.adjustment_category_id AS ad_category_id,"
                    + "ad.gross_in_cents AS ad_gross_in_cents,"
                    + "ad.should_adjust_commission AS ad_should_adjust_commission,"
                    + "ad.active AS ad_active,"
                    + "ad.fixed_value AS fixed_value,"
                    + "ad.valid_from AS valid_from,"
                    + "ad.valid_to AS valid_to,"
                    + "ad.created_at AS adjustment_definitions_created_at,"
                    + "ad.updated_at AS adjustment_definitions_updated_at,"
                    + "ac.id AS adjustment_categories_id,"
                    + "ac.name AS adjustment_categories_name,"
                    + "ac.description AS ac_description,"
                    + "ac.created_at AS ac_created_at,"
                    + "ac.updated_at AS ac_updated_at,"
                    + "ac.negative AS negative, "
                    + "'adjustments' AS source_table,"
                    + "'SeaLink' AS source_db, "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM adjustments_view AS a "
                    + " LEFT JOIN adjustment_definitions_view AS ad "
                    + " ON ad.id = a.adjustment_definition_id "
                    + " LEFT JOIN adjustment_categories AS ac "
                    + " ON ac.id = ad.adjustment_category_id"
                    + " WHERE a.active = 1 "
                    + " and a.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') ";

            limitMysqlRow = true;
        }
        if (tabname.equalsIgnoreCase("adjustments_dimension_stg")) {
            sql = "SELECT "
                    + "ad.id                         AS adjustment_definitions_id,"
                    + "ad.name                       AS adjustment_definitions_name,"
                    + "ad.percentage_value           AS percentage_value,"
                    + "ad.percentage                 AS percentage,"
                    + "ad.adjustment_category_id     AS ad_category_id,"
                    + "ad.gross_in_cents             AS ad_gross_in_cents,"
                    + "ad.should_adjust_commission   AS ad_should_adjust_commission,"
                    + "ad.active                     AS ad_active,"
                    + "ad.fixed_value                AS fixed_value,"
                    + "ad.valid_from                 AS valid_from,"
                    + "ad.valid_to                   AS valid_to,"
                    + "ad.created_at                 AS created_at,"
                    + "ad.updated_at                 AS updated_at,"
                    + "ac.id                         AS adjustment_categories_id,"
                    + "ac.name                       AS adjustment_categories_name,"
                    + "ac.description                AS description,"
                    + "ac.created_at                 AS adjustment_categories_created_at,"
                    + "ac.updated_at                 AS adjustment_categories_updated_at,"
                    + "ac.negative                   AS negative, "
                    + "'adjustment_definitions'      AS source_table,"
                    + "'SeaLink'                     AS source_db, "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM adjustment_definitions_view     AS ad "
                    + " LEFT JOIN adjustment_categories AS ac "
                    + " ON ac.id = ad.adjustment_category_id "
                    + " WHERE ad.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') AND STR_TO_DATE('" + lt_date + " ', '%Y-%m-%d %T') ";
            limitMysqlRow = true;
        }
        if (tabname.equalsIgnoreCase("fare_basis_sets_dimension_stg")) {
            sql = "SELECT "
                    + "id                             AS id,"
                    + "fare_basis_pointer_id          AS fare_basis_pointer_id,"
                    + "tariff_level_id                AS tariff_level_id,"
                    + "type                           AS type,"
                    + "created_at                     AS created_at,"
                    + "updated_at                     AS updated_at,"
                    + "name                           AS name,"
                    + "buying_fare_basis_set_id       AS buying_fare_basis_set_id,"
                    + "default_buying                 AS default_buying,"
                    + "price_by_mark_up               AS price_by_mark_up,"
                    + "limit_to_currency_iso_code     AS limit_to_currency_iso_code,"
                    + "'commission_product_selectors' AS source_table,"
                    + "'SeaLink'                      AS source_db, "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    //                    + " FROM fare_basis_sets "
                    + " FROM fare_basis_sets_view "
                    + " WHERE updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') AND STR_TO_DATE(' =" + lt_date + "', '%Y-%m-%d %T') ";
            limitMysqlRow = true;
        }
        if (tabname.equalsIgnoreCase("commission_structure_stg")) {
            sql = "SELECT "
                    + "clients.id  AS client_id,"
                    + "clients.mail_out AS mail_out,"
                    + "(CASE clients.payment_method WHEN 0 THEN 'PAY DIRECT' WHEN 1 THEN 'TICKET HOLDER' WHEN 2 THEN 'ON ACCOUNT' WHEN 3 THEN 'ON ACCOUNT TICKET_HOLDER'  ELSE 'UNKNOWN' END)  AS payment_method,"
                    + "DATE(clients.created_at)       AS clients_created_at,"
                    + "DATE(clients.updated_at)       AS clients_updated_at,"
                    + "cl.name                        AS commission_level,"
                    + "cl.default                     AS default_val,"
                    + "cl.parent_id                   AS parent_id,"
                    + "cl.id                          AS commission_id,"
                    + "DATE(cl.created_at)            AS commission_level_created_at,"
                    + "DATE(cl.updated_at)            AS commission_level_updated_at,"
                    + "cps.consumer_type              AS consumer_type,"
                    + "DATE(cps.created_at)           AS created_at,"
                    + "DATE(cps.updated_at)           AS updated_at,"
                    + "vt.name                        AS vehicle_name,"
                    + "r.name                         AS resource_name,"
                    + "r.type                         AS resource_type,"
                    + "fbs.name                       AS fare_basis_set_name,"
                    + "fbs.type                       AS fare_basis_set_type,"
                    + "pt.name                        AS product_type_name,"
                    + "rc.name                        AS resource_categories_name,"
                    + "'commission_product_selectors' AS source_table,"
                    + "'QuickTravel'                  AS source_db, "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    //                    + " FROM clients                     AS clients "
                    + " FROM clients_view                     AS clients "
                    + " LEFT JOIN commission_levels      AS cl "
                    + " ON clients.commission_level_id = cl.id "
                    + " LEFT JOIN commission_product_selectors AS cps "
                    + " ON cl.id = cps.commission_level_id "
                    + " LEFT JOIN vehicle_types AS vt "
                    + " ON cps.vehicle_type_id = vt.id "
                    + " LEFT JOIN resources_view AS r "
                    + " ON cps.resource_id = r.id "
                    + " LEFT JOIN package_items AS p "
                    + " ON cps.package_item_id = p.id "
                    //                    + " LEFT JOIN fare_basis_sets AS fbs "
                    + " LEFT JOIN fare_basis_sets_view AS fbs "
                    + " ON cps.fare_basis_set_id = fbs.id "
                    + " LEFT JOIN product_types AS pt "
                    + " ON cps.product_type_id = pt.id "
                    + " LEFT JOIN resource_categories AS rc "
                    + " ON cps.resource_category_id = rc.id "
                    + " LEFT JOIN commissions AS c "
                    + " ON cps.id = c.commission_product_selector_id"
                    + " WHERE cps.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') AND STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') ";
            limitMysqlRow = true;
        }

        if (tabname.equalsIgnoreCase("booking_log_entries_stg")) {
            sql = " SELECT "
                    + " id AS log_entries_id,"
                    + " controller,"
                    + " action,"
                    + " text,"
                    + " (CASE WHEN text like '%Manual Note%'  THEN 'Manual Note'  ELSE 'Normal Note' END) AS entry_flag ,"
                    + " booking_id,"
                    + " created_at,"
                    + " updated_at,"
                    + "'QuickTravel' AS source_db, "
                    + cmpId + " AS company_id, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM log_entries "
                    + " WHERE updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') AND STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') ";
            limitMysqlRow = true;
        }

        if (tabname.equalsIgnoreCase("booking_promo_codes_stg")) {
            sql = "SELECT "
                    + " p.id AS id, "
                    + " p.booking_id AS booking_id, "
                    + " p.code AS code, "
                    + cmpId + " AS company_id, "
                    + "'QuickTravel' AS source_db, "
                    + "b.reference custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    //                    + " FROM bookings AS b "
                    + " FROM bookings_view AS b "
                    + " LEFT JOIN dim_booking_promo_codes AS p "
                    + " ON b.id = p.booking_id "
                    + " WHERE b.updated_at  BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') "
                    + " GROUP BY b.id "
                    + " ORDER BY b.id ";
            limitMysqlRow = true;
        }

        if (tabname.equalsIgnoreCase("accomodation_properties_stg")) {
            sql = "SELECT                                 "
                    + "p.id             AS properties_id,     "
                    + "p.name           AS property,          "
                    + "p.description    AS property_desc,     "
                    + "p.check_in       AS check_in,          "
                    + "p.check_out      AS check_out,         "
                    + "p.star_rating    AS star_rating,       "
                    + "p._address_id    AS address_id,        "
                    + "p.contact_id     AS contact_id,        "
                    + "p.contact_person AS contact_person,    "
                    + "p.created_at     AS created_at,        "
                    + "p.updated_at     AS updated_at,        "
                    + "p.location_id    AS location_id,       "
                    + "l.name           AS location,          "
                    + "r.id             AS region_id,         "
                    + "r.name             AS name,         "
                    + cmpId + " AS company_id, "
                    + "'QuickTravel' AS source_db, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " FROM                                   "
                    //                +" properties              AS p           "
                    + " properties_view              AS p           "
                    + " LEFT JOIN locations AS l         "
                    + " ON p.location_id = l.id                "
                    + " LEFT JOIN locations_regions AS lr"
                    + " ON l.id = lr.location_id               "
                    + " LEFT JOIN regions AS r           "
                    + " ON lr.region_id = r.id                 "
                    + " WHERE p.updated_at  BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') "
                    + " group by p.id order by p.id";
            limitMysqlRow = true;
        }

        if (tabname.equalsIgnoreCase("reservations_service_stg")) {
            sql = " SELECT s.id                                AS service_id ,                    "
                    + " s.date                                     AS service_date ,                  "
                    + " s.trip_id                                  AS trip_id ,                       "
                    + " s.resource_id                              AS resource_id ,                   "
                    + " s.capacity                                 AS capacity ,                      "
                    + " s.booked                                   AS booked ,                        "
                    + " s.notes                                    AS notes ,                         "
                    + " s.state                                    AS service_state ,                 "
                    + " s.peak                                     AS peak ,                          "
                    + " s.from_trip_stop_id                        AS from_trip_stop_id ,             "
                    + " s.to_trip_stop_id                          AS to_trip_stop_id ,               "
                    + " s.departure_time                           AS departure_time ,                "
                    + " s.deck_layout_template_id                  AS deck_layout_template_id ,       "
                    + " s.inventory_type                           AS service_inventory_type ,        "
                    + " s.masterpointed_service_id                 AS masterpointed_service_id,       "
                    + " s.created_at                               AS service_created_at ,            "
                    + " s.updated_at                               AS service_updated_at ,            "
                    + " (r.gross_in_cents - r.commission_in_cents) AS nett ,                          "
                    + " r.gross_in_cents                           AS gross ,                         "
                    + " r.commission_in_cents                      AS commission ,                    "
                    + " r.cost_in_cents                            AS cost ,                          "
                    + " r.total_adjustments_in_cents               AS included_gross_adjustment ,     "
                    + " r.total_adjusted_commission_in_cents       AS included_commission_adjustment, "
                    + " r.first_travel_date                        AS first_travel_date ,             "
                    + " r.pick_up_information                      AS pick_up_information ,           "
                    + " r.drop_off_information                     AS drop_off_information,           "
                    + " r.comment                                  AS COMMENT ,                       "
                    + " r.created_at                               AS res_created_at ,                "
                    + " r.updated_at                               AS res_updated_at ,                "
                    + " r.active                                   AS reservation_active ,            "
                    + " r.id                                       AS Component_id ,                  "
                    + " r.inventory_type res_inventory_type,                                          "
                    + " r.request_confirmed request_confirmed,                                        "
                    + " r.notes_for_vendor notes_for_vendor ,                                         "
                    + " r.vendor_pnr vendor_pnr ,                                                     "
                    + " r.vendor_staff vendor_staff ,                                                 "
                    + " r.manually_priced manually_priced ,                                           "
                    + " r.sub_items_gross_in_cents sub_items_gross_in_cents,                          "
                    + " r.note_for_inventory_type_change note_for_inventory_type_change,              "
                    + " r.position position ,                                                         "
                    + " r.manually_assigned_fare_basis_set manually_assigned_fare_basis_set ,         "
                    + " r.cost_currency_iso_code cost_currency_iso_code ,                             "
                    + " b.id AS booking_id,                                                           "
                    + " b.reference AS booking_reference,                                                           "
                    + " rcs.id                                     AS consumer_splits_id,          "
                    + " rcs.consumer_splittable_id                 AS consumer_splittable_id,      "
                    + " rcs.gross_in_cents                         AS gross_in_cents,              "
                    + " rcs.commission_in_cents                    AS commission_in_cents,         "
                    + " rcs.consumer_splittable_type               AS consumer_splittable_type,    "
                    + " rcs.services_deck_division_id              AS services_deck_division_id,   "
                    + " c.id                                       AS consumers_id,                "
                    + " MAX(CONCAT(c.last_name,'  ',c.first_name)) AS consumer_name,               "
                    + " c.weight                                   AS tonnage,                     "
                    + " c.type                                     AS consumer_type,                "
                    + " 'QuickTravel'                              AS source_db,                   "
                    + cmpId + " AS company_id, "
                    + " NULL custom_field1, "
                    + " NULL custom_field2, "
                    + " NULL custom_field3, "
                    + " NULL custom_field4, "
                    + " NULL custom_field5, "
                    + " NULL custom_field6, "
                    + " NULL custom_field7, "
                    + " NULL custom_field8, "
                    + " NULL custom_number1,"
                    + " NULL custom_number2,"
                    + " (case when c.type = 'Passenger' then COUNT(DISTINCT(c.id)) else null end) custom_number3, "
                    + " NULL custom_number4, "
                    + " NULL custom_number5, "
                    + " NULL custom_number6, "
                    + " NULL custom_number7, "
                    + " NULL custom_number8, "
                    + " b.post_code AS geographic_dimension_id, "
                    + " b.client_id AS client_dimension_id, "
                    + " b.creator_id AS user_dimension_id, "
                    + " b.company_creator_id AS department_dimension_id, "
                    + "b.state AS state, "
                    + "b.first_travel_date AS booking_first_travel_date, "
                    + "b.created_at AS booking_created_at, "
                    + "b.updated_at AS booking_updated_at, "
                    + "date(b.first_travel_date) AS booking_first_travel_date_indate, "
                    + "hour(b.first_travel_date)*3600 + minute(b.first_travel_date)*60 + "
                    + "second(b.first_travel_date) AS first_travel_date_time_insec,  "
                    + "date(b.created_at) AS booking_created_date, "
                    + "hour(b.created_at)*3600 + minute(b.created_at)*60 + "
                    + " second(b.created_at) AS booking_created_time_insec, "
                    + "date(b.updated_at) AS booking_updated_date, "
                    + "hour(b.updated_at)*3600 + minute(b.updated_at)*60 + "
                    + " second(b.updated_at) AS booking_updated_time_insec, "
                    + " b.gross_in_cents AS booking_gross, "
                    + " b.commission_in_cents  AS booking_commission, "
                    + " (b.gross_in_cents - b.commission_in_cents) AS booking_nett, "
                    + " b.balance_in_cents AS amount_owing, "
                    + " b.total_adjustments_in_cents total_adjustments_in_cents, "
                    + " b.web_site_id  web_site_id ,"
                    + " b.creator_id  booking_creator_id ,"
                    + " b.updator_id  booking_updator_id "
                    + " FROM services s     "
                    + " LEFT JOIN reservations_services rs"
                    + " ON rs.service_id = s.id                 "
                    //              +" LEFT JOIN reservations AS r       "
                    + " LEFT JOIN reservations_view AS r       "
                    + " ON r.id = rs.reservation_id             "
                    //              +" LEFT JOIN bookings AS b           "
                    + " LEFT JOIN bookings_view AS b           "
                    + " ON b.id = r.booking_id                  "
                    + " LEFT JOIN consumer_splits AS rcs        "
                    + " ON rcs.consumer_splittable_id    = r.id "
                    + " AND rcs.consumer_splittable_type = 'Reservation' "
                    + " LEFT JOIN consumers AS c                         "
                    + " ON c.id = rcs.consumer_id                        "
                    + " WHERE r.updated_at  BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T') "
                    + " GROUP BY s.id,r.id  "
                    + " ORDER BY s.id,r.id  ";
            limitMysqlRow = true;
        }
        if (tabname.equalsIgnoreCase("qrules_rules_dim_stg")) {
            sql = " select                     "
                    + " id as qrules_rules_id,     "
                    + " display_name AS display_name,              "
                    + " description AS description,               "
                    + " unique_name AS unique_name,               "
                    + " active AS active,                    "
                    + " priority AS priority,                  "
                    + " valid_from AS valid_from,                "
                    + " valid_to AS valid_to,                  "
                    + " created_at AS created_at,                "
                    + " updated_at AS updated_at,                "
                    + " exclusive AS exclusive,"
                    + cmpId + " AS company_id, "
                    + "'QuickTravel' AS source_db, "
                    + "NULL custom_field1, "
                    + "NULL custom_field2, "
                    + "NULL custom_field3, "
                    + "NULL custom_number1, "
                    + "NULL custom_number2, "
                    + "NULL custom_number3 "
                    + " from dim_qrules_rules "
                    + " WHERE updated_at  BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') and STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')"
                    + " GROUP BY id ORDER BY id ";
        }
        if (tabname.equalsIgnoreCase("qrules_rules_stg")) {
            sql = " SELECT(r.gross_in_cents - r.commission_in_cents) AS nett,                                                                                "
                    + " r.gross_in_cents                               AS gross,                                                                                 "
                    + " r.commission_in_cents                          AS commission,                                                                            "
                    + " r.cost_in_cents                                AS cost,                                                                                  "
                    + " r.total_adjustments_in_cents                   AS included_gross_adjustment,                                                             "
                    + " r.total_adjusted_commission_in_cents           AS included_commission_adjustment,                                                        "
                    + " COUNT(DISTINCT(rpax.id))                       AS num_passengers,                                                                        "
                    + " COUNT(DISTINCT(rveh.id))                       AS num_vehicles,                                                                          "
                    + " (SELECT SUM(rveh.length)                                                                                                                 "
                    + " FROM consumers rveh                                                                                                                      "
                    + " WHERE rveh.id = rcs.consumer_id                                                                                                          "
                    + " AND rveh.type = 'Vehicle'                                                                                                                "
                    + " )                                                                                                AS length_vehicles,                     "
                    + " DATEDIFF(r.last_travel_date, r.first_travel_date)                                                AS duration,                            "
                    + " r.first_travel_date                                                                              AS first_travel_date,                   "
                    + " b.first_travel_date                                                                              AS booking_first_travel_date,           "
                    + " b.created_at                                                                                     AS booking_created_at,                  "
                    + " MIN(ts.time)                                                                                     AS service_departure_time,              "
                    + " from_ts.time                                                                                     AS pickup_time,                         "
                    + " DATE(r.first_travel_date)                                                                        AS first_travel_date_indate,            "
                    + " hour(r.first_travel_date)*3600 + minute(r.first_travel_date)*60 + second(r.first_travel_date)    AS first_travel_date_time_insec,        "
                    + " DATE(b.first_travel_date)                                                                        AS booking_first_travel_date_indate,    "
                    + " hour(b.first_travel_date)*3600 + minute(b.first_travel_date)*60 + second(b.first_travel_date)    AS booking_first_travel_date_time_insec,"
                    + " DATE(b.created_at)                                                                               AS booking_created_date,                "
                    + " hour(b.created_at)*3600 + minute(b.created_at)*60 + second(b.created_at)                         AS booking_created_time_insec,          "
                    + " from_rs.name                                                                                     AS from_stop,                           "
                    + " to_rs.name                                                                                       AS to_stop,                             "
                    + " r.pick_up_information                                                                            AS pick_up_information,                 "
                    + " r.drop_off_information                                                                           AS drop_off_information,                "
                    + " r.comment                                                                                        AS COMMENT,                             "
                    + " b.post_code                                                                                      AS geographic_dimension_id,             "
                    + " b.client_id                                                                                      AS client_dimension_id,                 "
                    + " rce.vendor_id                                                                                    AS vendor_dimension_id,                 "
                    + " b.creator_id                                                                                     AS user_dimension_id,                   "
                    + " b.company_creator_id                                                                             AS department_dimension_id,             "
                    + " b.reference                                                                                      AS booking_reference,                   "
                    + " bc.name                                                                                          AS bed_configuration,                   "
                    + " r.resource_id                                                                                    AS product_component_dimension_id,      "
                    + " b.customer_contact_name                                                                          AS customer_contact_name,               "
                    + " b.customer_contact_phone                                                                         AS customer_contact_phone,              "
                    + " b.customer_contact_mobile                                                                        AS customer_contact_mobile,             "
                    + " r.created_at                                                                                     AS created_at,                          "
                    + " r.updated_at                                                                                     AS updated_at,                          "
                    + " DATE( r.created_at)                                                                              AS created_date,                        "
                    + " hour( r.created_at)*3600 + minute( r.created_at)*60 + second( r.created_at)                      AS created_time_insec,                  "
                    + " DATE( r.updated_at)                                                                              AS updated_date,                        "
                    + " hour( r.updated_at)*3600 + minute( r.updated_at)*60 + second( r.updated_at)                      AS updated_time_insec,                  "
                    + " b.balance_in_cents                                                                               AS amount_owed,                         "
                    + " b.gross_in_cents                                                                                 AS booking_gross,                       "
                    + " (b.gross_in_cents - b.commission_in_cents)                                                       AS booking_nett,                        "
                    + " b.commission_in_cents                                                                            AS booking_commission,                  "
                    + " r.active                                                                                         AS reservation_active,                  "
                    + " b.state                                                                                          AS booking_state,                       "
                    + " IF( r.active = 0, 'cancelled', IF( DATE(r.updated_at) = DATE(r.created_at), 'new', 'changed' ) ) AS change_state,                        "
                    + " tl.name                                                                                          AS tariff_level,                        "
                    + " fbs.name                                                                                         AS fare_basis_set,                      "
                    + " r.id                                                                                             AS Component_id,                        "
                    + " 'reservations'                                                                                   AS source_table,                        "
                    + " 0 package_id ,                                                                                                                           "
                    + " 'NA'          AS package_name ,                                                                                                          "
                    + " b.id booking_id ,                                                                                                                        "
                    + " b.web_site_id value5,                                                                                                                    "
                    + " referral_codes.code value4,                                                                                                              "
                    + " r.reservation_group_id value3,                                                                                                           "
                    + " countries.name AS country,                                                                                                               "
                    + " b.created_at booking_created_at_gmt,                                                                                                     "
                    + " r.created_at created_at_gmt,                                                                                                             "
                    + " r.updated_at updated_at_gmt,                                                                                                             "
                    + " MAX(CONCAT(rveh.last_name,'  ',rveh.first_name)) AS consumer_name,                                                                       "
                    + " MAX(rveh.first_name)                             AS consumer_first_name,                                                                 "
                    + " MAX(rveh.last_name)                              AS consumer_last_name,                                                                  "
                    + " NULL adjustments_category,                                                                                                               "
                    + " NULL AS till_id,                                                                                                                         "
                    + " b.creator_id creator_id,                                                                                                                 "
                    + " b.updator_id updator_id,                                                                                                                 "
                    + " r.inventory_type inventory_type,                                                                                                         "
                    + " r.request_confirmed request_confirmed,                                                                                                   "
                    + " r.notes_for_vendor notes_for_vendor,                                                                                                     "
                    + " r.vendor_pnr vendor_pnr,                                                                                                                 "
                    + " r.vendor_staff vendor_staff,                                                                                                             "
                    + " r.manually_priced manually_priced,                                                                                                       "
                    + " r.sub_items_gross_in_cents sub_items_gross_in_cents,                                                                                     "
                    + " r.note_for_inventory_type_change note_for_inventory_type_change,                                                                         "
                    + " r.position position,                                                                                                                     "
                    + " r.manually_assigned_fare_basis_set manually_assigned_fare_basis_set,                                                                     "
                    + " r.cost_currency_iso_code cost_currency_iso_code,                                                                                         "
                    + " qrules_rules.unique_name          AS rule,                                                                                             "
                    + " qrules_applied_effects.created_at AS applied_on,                                                                                       "
                    + " qrules_applied_effects.qrules_effect_id qrules_effect_id,                                                                                "
                    + " qrules_effects.qrules_rule_id qrules_rule_id,                                                                                            "
                    + " qrules_applied_effects.id AS qrules_applied_effects_id,                                                                                  "
                    + " 'QuickTravel'             AS source_db,                                                                                                  "
                    + cmpId + " AS company_id,                                                                                                               "
                    + " NULL custom_field1,                                                                                                                      "
                    + " NULL custom_field2,                                                                                                                      "
                    + " NULL custom_field3,                                                                                                                      "
                    + " NULL custom_number1,                                                                                                                     "
                    + " NULL custom_number2,                                                                                                                     "
                    + " NULL custom_number3                                                                                                                      "
                    + " FROM dim_qrules_applied_effects  AS  qrules_applied_effects                                                                                                           "
                    + " JOIN dim_qrules_effects  AS qrules_effects                                                                                                               "
                    + " ON qrules_applied_effects.qrules_effect_id = qrules_effects.id                                                                           "
                    + " JOIN dim_qrules_rules  AS qrules_rules                                                                                                                 "
                    + " ON qrules_effects.qrules_rule_id = qrules_rules.id                                                                                       "
                    //                    +" JOIN reservations AS r                                                                                                              "
                    + " JOIN reservations_view AS r                                                                                                              "
                    + " ON qrules_applied_effects.applied_to_id    = r.id                                                                                        "
                    + " AND qrules_applied_effects.applied_to_type = 'Reservation'                                                                               "
                    //                    +" LEFT JOIN bookings AS b                                                                                                                  "
                    + " LEFT JOIN bookings_view AS b                                                                                                                  "
                    + " ON r.booking_id = b.id                                                                                                                   "
                    + " LEFT JOIN countries AS countries                                                                                                         "
                    + " ON b.country_id = countries.id                                                                                                           "
                    + " LEFT JOIN referral_codes AS referral_codes                                                                                               "
                    + " ON b.referral_code_id = referral_codes.id                                                                                                "
                    + " LEFT JOIN consumer_splits AS rcs                                                                                                         "
                    + " ON rcs.consumer_splittable_id    = r.id                                                                                                  "
                    + " AND rcs.consumer_splittable_type = 'Reservation'                                                                                         "
                    + " LEFT JOIN consumers AS rpax                                                                                                              "
                    + " ON rpax.id    = rcs.consumer_id                                                                                                          "
                    + " AND rpax.type = 'Passenger'                                                                                                              "
                    + " LEFT JOIN consumers AS rveh                                                                                                              "
                    + " ON rveh.id    = rcs.consumer_id                                                                                                          "
                    + " AND rveh.type = 'Vehicle'                                                                                                                "
                    + " LEFT JOIN resources_view AS rce                                                                                                          "
                    + " ON rce.id = r.resource_id                                                                                                                "
                    + " LEFT JOIN bed_configurations AS bc                                                                                                       "
                    + " ON bc.id = r.bed_configuration_id                                                                                                        "
                    + " LEFT JOIN trip_stops AS from_ts                                                                                                          "
                    + " ON r.from_trip_stop_id = from_ts.id                                                                                                      "
                    + " LEFT JOIN route_stops AS from_rs                                                                                                         "
                    + " ON from_ts.route_stop_id = from_rs.id                                                                                                    "
                    + " LEFT JOIN trip_stops AS to_ts                                                                                                            "
                    + " ON r.to_trip_stop_id = to_ts.id                                                                                                          "
                    + " LEFT JOIN route_stops AS to_rs                                                                                                           "
                    + " ON to_ts.route_stop_id = to_rs.id                                                                                                        "
                    + " LEFT JOIN reservations_services AS rs                                                                                                    "
                    + " ON rs.reservation_id = r.id                                                                                                              "
                    + " LEFT JOIN services AS s                                                                                                                  "
                    + " ON s.id = rs.service_id                                                                                                                  "
                    + " LEFT JOIN trip_stops AS ts                                                                                                               "
                    + " ON ts.id = s.from_trip_stop_id                                                                                                           "
                    + " LEFT JOIN trips AS trip                                                                                                                  "
                    + " ON ts.trip_id = trip.id                                                                                                                  "
                    //                    +" LEFT JOIN fare_basis_sets AS fbs                                                                                                         "
                    + " LEFT JOIN fare_basis_sets_view AS fbs                                                                                                         "
                    + " ON r.fare_basis_set_id = fbs.id                                                                                                          "
                    + " LEFT JOIN tariff_levels tl                                                                                                               "
                    + " ON fbs.tariff_level_id = tl.id                                                                                                           "
                    + " WHERE qrules_rules.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') AND STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')   "
                    + " or qrules_applied_effects.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') AND STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')   "
                    + " or qrules_effects.updated_at BETWEEN STR_TO_DATE('" + st_date + "', '%Y-%m-%d %T') AND STR_TO_DATE('" + lt_date + "', '%Y-%m-%d %T')   "
                    + " GROUP BY r.id,                                                                                                                           "
                    + " qrules_applied_effects.id                                                                                                                "
                    + " ORDER BY r.id ";
        }
        return sql;
    }

    public String SelecthashQuery(String tabName, String companyId) {
        String str = null;
        str = "select TAB_NAME,LAST_UPDATE_DATE,FACT_LAST_UPDATE_DATE from PRG_LOAD_TRACKER_MASTER_CMP "
                + "where UPPER(TAB_NAME) =UPPER('" + tabName + "')"
                + " AND COMPANY_ID = " + companyId;
        return str;
    }

    public String SelectDetailQuery(String masterId) {
        String str = null;
        str = "select request_run_det_Id,request_stage_name,request_stage_Load_type,request_st_data_start_date,request_st_data_end_date,request_st_Current_status, from prg_request_run_details where request_run_Id=" + masterId + " and rownum<10 order by request_run_det_Id desc";

        return str;
    }

    public String SelectMasterQuery() {
        String str = null;
        str = "SELECT request_run_Id,request_Name,request_Type,request_Current_status from prg_request_run_master where request_Current_status='running' order by request_run_Id desc";

        return str;
    }
//        public void runHash(){
//        ExecuteQuery ex =new ExecuteQuery();
//        try {
//            map = ex.runHashTable();
//      String tabname=(String) map.get("tabnamelist");
//      String date1=(String) map.get("lastupdateddate");
//            
//            
//
//        } catch (SQLException ex1) {
//            logger.error("Exception:",ex1);
//        }
//    }
}
